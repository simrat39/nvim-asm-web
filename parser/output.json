{
  "Plugin Manager": [
    {
      "gh": "wbthomason/packer.nvim",
      "link": "https://github.com/wbthomason/packer.nvim",
      "desc": "A use-package inspired plugin manager for Neovim. Uses native packages, supports Luarocks dependencies, written in Lua, allows for expressive config.",
      "isGH": true
    },
    {
      "gh": "savq/paq-nvim",
      "link": "https://github.com/savq/paq-nvim",
      "desc": "Neovim package manager written in Lua.",
      "isGH": true
    },
    {
      "gh": "NTBBloodbath/cheovim",
      "link": "https://github.com/NTBBloodbath/cheovim",
      "desc": "Neovim configuration switcher written in Lua. Inspired by chemacs.",
      "isGH": true
    }
  ],
  "LSP": [
    {
      "gh": "neovim/nvim-lspconfig",
      "link": "https://github.com/neovim/nvim-lspconfig",
      "desc": "Quickstart configurations for the Neovim LSP client.",
      "isGH": true
    },
    {
      "gh": "nvim-lua/lsp-status.nvim",
      "link": "https://github.com/nvim-lua/lsp-status.nvim",
      "desc": "This is a Neovim plugin/library for generating statusline components from the built-in LSP client.",
      "isGH": true
    },
    {
      "gh": "nvim-lua/lsp_extensions.nvim",
      "link": "https://github.com/nvim-lua/lsp_extensions.nvim",
      "desc": "Repo to hold a bunch of info & extension callbacks for built-in LSP.",
      "isGH": true
    },
    {
      "gh": "RishabhRD/nvim-lsputils",
      "link": "https://github.com/RishabhRD/nvim-lsputils",
      "desc": "Better defaults for nvim-lsp actions.",
      "isGH": true
    },
    {
      "gh": "kkharji/lspsaga.nvim",
      "link": "https://github.com/kkharji/lspsaga.nvim",
      "desc": "A light-weight lsp plugin based on Neovim built-in lsp with a highly performant UI.",
      "isGH": true
    },
    {
      "gh": "onsails/diaglist.nvim",
      "link": "https://github.com/onsails/diaglist.nvim",
      "desc": "Live render workspace diagnostics in quickfix, buffer diagnostics in loclist.",
      "isGH": true
    },
    {
      "gh": "folke/trouble.nvim",
      "link": "https://github.com/folke/trouble.nvim",
      "desc": "A pretty diagnostics list to help you solve all the trouble your code is causing.",
      "isGH": true
    },
    {
      "gh": "folke/lsp-colors.nvim",
      "link": "https://github.com/folke/lsp-colors.nvim",
      "desc": "A plugin that adds missing LSP diagnostics highlight groups for color schemes that don't yet support the builtin LSP client.",
      "isGH": true
    },
    {
      "gh": "kosayoda/nvim-lightbulb",
      "link": "https://github.com/kosayoda/nvim-lightbulb",
      "desc": "The plugin shows a lightbulb in the sign column whenever a `textDocument/codeAction` is available at the current cursor position.",
      "isGH": true
    },
    {
      "gh": "onsails/lspkind.nvim",
      "link": "https://github.com/onsails/lspkind.nvim",
      "desc": "The plugin adds vscode-like icons to Neovim lsp completions.",
      "isGH": true
    },
    {
      "gh": "ojroques/nvim-lspfuzzy",
      "link": "https://github.com/ojroques/nvim-lspfuzzy",
      "desc": "A small plugin to make the LSP client use FZF.",
      "isGH": true
    },
    {
      "gh": "gfanto/fzf-lsp.nvim",
      "link": "https://github.com/gfanto/fzf-lsp.nvim",
      "desc": "Enable the power of fzf fuzzy search for the Neovim built in lsp.",
      "isGH": true
    },
    {
      "gh": "ray-x/lsp_signature.nvim",
      "link": "https://github.com/ray-x/lsp_signature.nvim",
      "desc": "Lsp signature hint when you type.",
      "isGH": true
    },
    {
      "gh": "smjonas/inc-rename.nvim",
      "link": "https://github.com/smjonas/inc-rename.nvim",
      "desc": "Provides an incremental LSP rename command based on Neovim's command-preview feature.",
      "isGH": true
    },
    {
      "gh": "rmagatti/goto-preview",
      "link": "https://github.com/rmagatti/goto-preview",
      "desc": "Previewing native LSP's goto definition calls in floating windows.",
      "isGH": true
    },
    {
      "gh": "nanotee/sqls.nvim",
      "link": "https://github.com/nanotee/sqls.nvim",
      "desc": "Sqls (sql database connection plugin + LSP client) plugin for Neovim.",
      "isGH": true
    },
    {
      "gh": "jubnzv/virtual-types.nvim",
      "link": "https://github.com/jubnzv/virtual-types.nvim",
      "desc": "Neovim plugin that shows type annotations as virtual text.",
      "isGH": true
    },
    {
      "gh": "jose-elias-alvarez/nvim-lsp-ts-utils",
      "link": "https://github.com/jose-elias-alvarez/nvim-lsp-ts-utils",
      "desc": "Utilities to improve the TypeScript development experience for Neovim's built-in LSP client.",
      "isGH": true
    },
    {
      "gh": "ray-x/navigator.lua",
      "link": "https://github.com/ray-x/navigator.lua",
      "desc": "Learn existing code quickly and navigate code like a breeze. A swiss army knife makes exploring LSP and 🌲Treesitter symbols a piece of 🍰.",
      "isGH": true
    },
    {
      "gh": "simrat39/symbols-outline.nvim",
      "link": "https://github.com/simrat39/symbols-outline.nvim",
      "desc": "A tree like view for symbols in Neovim using the Language Server Protocol. Supports all your favourite languages.",
      "isGH": true
    },
    {
      "gh": "tamago324/nlsp-settings.nvim",
      "link": "https://github.com/tamago324/nlsp-settings.nvim",
      "desc": "A plugin for setting Neovim LSP with JSON files.",
      "isGH": true
    },
    {
      "gh": "simrat39/rust-tools.nvim",
      "link": "https://github.com/simrat39/rust-tools.nvim",
      "desc": "Tools for better development in rust using Neovim's builtin LSP.",
      "isGH": true
    },
    {
      "gh": "stevearc/aerial.nvim",
      "link": "https://github.com/stevearc/aerial.nvim",
      "desc": "A code outline window for skimming and quick navigation.",
      "isGH": true
    },
    {
      "gh": "jose-elias-alvarez/null-ls.nvim",
      "link": "https://github.com/jose-elias-alvarez/null-ls.nvim",
      "desc": "Use Neovim as a language server to inject LSP diagnostics, code actions, and more via Lua.",
      "isGH": true
    },
    {
      "gh": "jakewvincent/texmagic.nvim",
      "link": "https://github.com/jakewvincent/texmagic.nvim",
      "desc": "Enhance the lspconfig settings for Texlab by defining any number of custom LaTeX build engines and selecting them with magic comments.",
      "isGH": true
    },
    {
      "gh": "nanotee/nvim-lsp-basics",
      "link": "https://github.com/nanotee/nvim-lsp-basics",
      "desc": "Basic wrappers for LSP features.",
      "isGH": true
    },
    {
      "gh": "weilbith/nvim-code-action-menu",
      "link": "https://github.com/weilbith/nvim-code-action-menu",
      "desc": "A floating pop-up menu for code actions to show code action information and a diff preview.",
      "isGH": true
    },
    {
      "gh": "mfussenegger/nvim-lint",
      "link": "https://github.com/mfussenegger/nvim-lint",
      "desc": "An asynchronous linter plugin for Neovim (>= 0.5) complementary to the built-in Language Server Protocol support.",
      "isGH": true
    },
    {
      "gh": "b0o/SchemaStore.nvim",
      "link": "https://github.com/b0o/SchemaStore.nvim",
      "desc": "A Neovim Lua plugin providing access to the [SchemaStore](https://github.com/SchemaStore/schemastore) catalog.",
      "isGH": true
    },
    {
      "gh": "ldelossa/litee.nvim",
      "link": "https://github.com/ldelossa/litee.nvim",
      "desc": "Neovim's missing IDE features.",
      "isGH": true
    },
    {
      "gh": "fidget.nvim",
      "link": "https://github.com/j-hui/fidget.nvim",
      "desc": "Standalone UI for nvim-lsp progress.",
      "isGH": true
    },
    {
      "gh": "git.sr.ht/~whynothugo/lsp_lines.nvim",
      "link": "https://git.sr.ht/~whynothugo/lsp_lines.nvim",
      "desc": "A Neovim plugin that renders diagnostics using virtual lines on top of the real line of code.",
      "isGH": false
    },
    {
      "gh": "scalameta/nvim-metals",
      "link": "https://github.com/scalameta/nvim-metals",
      "desc": "Neovim plugin for Metals, the Scala language server, using Neovim's builtin LSP.",
      "isGH": true
    },
    {
      "gh": "junnplus/nvim-lsp-setup",
      "link": "https://github.com/Junnplus/nvim-lsp-setup",
      "desc": "A simple wrapper for nvim-lspconfig and nvim-lsp-installer to easily setup LSP servers.",
      "isGH": true
    },
    {
      "gh": "amrbashir/nvim-docs-view",
      "link": "https://github.com/amrbashir/nvim-docs-view",
      "desc": "A Neovim plugin to display lsp hover documentation in a side panel.",
      "isGH": true
    },
    {
      "gh": "anott03/nvim-lspinstall",
      "link": "https://github.com/anott03/nvim-lspinstall",
      "desc": "Easy to install language servers.",
      "isGH": true
    },
    {
      "gh": "alexaandru/nvim-lspupdate",
      "link": "https://github.com/alexaandru/nvim-lspupdate",
      "desc": "Updates installed (or auto installs if missing) LSP servers.",
      "isGH": true
    },
    {
      "gh": "williamboman/nvim-lsp-installer",
      "link": "https://github.com/williamboman/nvim-lsp-installer",
      "desc": "Easily install more than 50+ LSP servers - with full Windows support.",
      "isGH": true
    },
    {
      "gh": "andrewferrier/textobj-diagnostic",
      "link": "https://github.com/andrewferrier/textobj-diagnostic.nvim",
      "desc": "Text object for diagnostics (such as those generated by LSP servers).",
      "isGH": true
    }
  ],
  "Completion": [
    {
      "gh": "ms-jpq/coq_nvim",
      "link": "https://github.com/ms-jpq/coq_nvim",
      "desc": "Fast as FUCK Neovim completion. SQLite, concurrent scheduler, hundreds of hours of optimization.",
      "isGH": true
    },
    {
      "gh": "jameshiew/nvim-magic",
      "link": "https://github.com/jameshiew/nvim-magic",
      "desc": "Framework for integrating AI code assistance.",
      "isGH": true
    },
    {
      "gh": "hrsh7th/nvim-cmp",
      "link": "https://github.com/hrsh7th/nvim-cmp",
      "desc": "A completion plugin for Neovim written in Lua. New version of nvim-compe.",
      "isGH": true
    },
    {
      "gh": "hrsh7th/cmp-nvim-lsp",
      "link": "https://github.com/hrsh7th/cmp-nvim-lsp",
      "desc": "A nvim-cmp source for Neovim builtin LSP client.",
      "isGH": true
    },
    {
      "gh": "saadparwaiz1/cmp_luasnip",
      "link": "https://github.com/saadparwaiz1/cmp_luasnip",
      "desc": "A nvim-cmp source for luasnip completion.",
      "isGH": true
    },
    {
      "gh": "quangnguyen30192/cmp-nvim-ultisnips",
      "link": "https://github.com/quangnguyen30192/cmp-nvim-ultisnips",
      "desc": "A nvim-cmp source for UltiSnips.",
      "isGH": true
    },
    {
      "gh": "hrsh7th/cmp-path",
      "link": "https://github.com/hrsh7th/cmp-path",
      "desc": "A nvim-cmp source for filesystem paths.",
      "isGH": true
    },
    {
      "gh": "petertriho/cmp-git",
      "link": "https://github.com/petertriho/cmp-git",
      "desc": "A nvim-cmp source for Git.",
      "isGH": true
    },
    {
      "gh": "hrsh7th/cmp-buffer",
      "link": "https://github.com/hrsh7th/cmp-buffer",
      "desc": "A nvim-cmp source for buffer words.",
      "isGH": true
    },
    {
      "gh": "tzachar/cmp-tabnine",
      "link": "https://github.com/tzachar/cmp-tabnine",
      "desc": "A nvim-cmp source for TabNine.",
      "isGH": true
    },
    {
      "gh": "tzachar/cmp-fuzzy-buffer",
      "link": "https://github.com/tzachar/cmp-fuzzy-buffer",
      "desc": "A nvim-cmp source for fuzzy buffer words.",
      "isGH": true
    },
    {
      "gh": "tzachar/cmp-fuzzy-path",
      "link": "https://github.com/tzachar/cmp-fuzzy-path",
      "desc": "A nvim-cmp source for fuzzy path completion, both in buffers and in command line mode.",
      "isGH": true
    },
    {
      "gh": "hrsh7th/cmp-nvim-lua",
      "link": "https://github.com/hrsh7th/cmp-nvim-lua",
      "desc": "A nvim-cmp source for the Neovim Lua API.",
      "isGH": true
    },
    {
      "gh": "lukas-reineke/cmp-rg",
      "link": "https://github.com/lukas-reineke/cmp-rg",
      "desc": "A nvim-cmp source for Ripgrep.",
      "isGH": true
    },
    {
      "gh": "f3fora/cmp-spell",
      "link": "https://github.com/f3fora/cmp-spell",
      "desc": "A nvim-cmp source for vim's spellsuggest.",
      "isGH": true
    },
    {
      "gh": "andersevenrud/compe-tmux",
      "link": "https://github.com/andersevenrud/compe-tmux",
      "desc": "A nvim-cmp source for Tmux.",
      "isGH": true
    },
    {
      "gh": "David-Kunz/cmp-npm",
      "link": "https://github.com/David-Kunz/cmp-npm",
      "desc": "A nvim-cmp source for NPM.",
      "isGH": true
    },
    {
      "gh": "lukas-reineke/cmp-under-comparator",
      "link": "https://github.com/lukas-reineke/cmp-under-comparator",
      "desc": "A nvim-cmp function for better sorting.",
      "isGH": true
    },
    {
      "gh": "zbirenbaum/copilot-cmp",
      "link": "https://github.com/zbirenbaum/copilot-cmp",
      "desc": "A nvim-cmp source for GitHub copilot.",
      "isGH": true
    },
    {
      "gh": "rcarriga/cmp-dap",
      "link": "https://github.com/rcarriga/cmp-dap",
      "desc": "A nvim-cmp source for nvim-dap.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.completion",
      "link": "https://github.com/echasnovski/mini.nvim#minicompletion",
      "desc": "Module of `mini.nvim` for asynchronous two-stage completion. Supports showing completion item info and independent function signature.",
      "isGH": true
    },
    {
      "gh": "noib3/nvim-compleet",
      "link": "https://github.com/noib3/nvim-compleet",
      "desc": "A Neovim autocompletion framework written in Rust.",
      "isGH": true
    },
    {
      "gh": "vigoux/complementree.nvim",
      "link": "https://github.com/vigoux/complementree.nvim",
      "desc": "Light and synchronous completion plugin based on tree-sitter and with a functional-programming interface.",
      "isGH": true
    },
    {
      "gh": "GitHub/copilot.vim",
      "link": "https://github.com/github/copilot.vim",
      "desc": "GitHub Copilot.",
      "isGH": true
    }
  ],
  "Markdown / LaTeX": [
    {
      "gh": "ellisonleao/glow.nvim",
      "link": "https://github.com/ellisonleao/glow.nvim",
      "desc": "Markdown preview using glow.",
      "isGH": true
    },
    {
      "gh": "davidgranstrom/nvim-markdown-preview",
      "link": "https://github.com/davidgranstrom/nvim-markdown-preview",
      "desc": "Markdown preview in the browser using pandoc and live-server through Neovim's job-control API.",
      "isGH": true
    },
    {
      "gh": "jghauser/auto-pandoc.nvim",
      "link": "https://github.com/jghauser/auto-pandoc.nvim",
      "desc": "Easy pandoc conversion leveraging yaml blocks.",
      "isGH": true
    },
    {
      "gh": "jghauser/follow-md-links.nvim",
      "link": "https://github.com/jghauser/follow-md-links.nvim",
      "desc": "Press enter to follow internal markdown links.",
      "isGH": true
    },
    {
      "gh": "jubnzv/mdeval.nvim",
      "link": "https://github.com/jubnzv/mdeval.nvim",
      "desc": "A Neovim plugin that evaluates code blocks inside markdown documents.",
      "isGH": true
    },
    {
      "gh": "kdheepak/panvimdoc",
      "link": "https://github.com/kdheepak/panvimdoc",
      "desc": "A pandoc to vimdoc GitHub action.",
      "isGH": true
    },
    {
      "gh": "frabjous/knap",
      "link": "https://github.com/frabjous/knap",
      "desc": "Plugin for creating automatic updating-as-you-type previews for markdown, LaTeX and other documents.",
      "isGH": true
    },
    {
      "gh": "jbyuki/carrot.nvim",
      "link": "https://github.com/jbyuki/carrot.nvim",
      "desc": "Markdown evaluator for Neovim Lua code blocks.",
      "isGH": true
    }
  ],
  "Syntax": [
    {
      "gh": "nvim-treesitter/nvim-treesitter",
      "link": "https://github.com/nvim-treesitter/nvim-treesitter",
      "desc": "Neovim Treesitter configurations and abstraction layer.",
      "isGH": true
    },
    {
      "gh": "nvim-treesitter/nvim-treesitter-textobjects",
      "link": "https://github.com/nvim-treesitter/nvim-treesitter-textobjects",
      "desc": "Create your own textobjects using tree-sitter queries.",
      "isGH": true
    },
    {
      "gh": "RRethy/nvim-treesitter-textsubjects",
      "link": "https://github.com/RRethy/nvim-treesitter-textsubjects",
      "desc": "Location and syntax aware text objects which _do what you mean_.",
      "isGH": true
    },
    {
      "gh": "kylechui/nvim-surround",
      "link": "https://github.com/kylechui/nvim-surround",
      "desc": "A plugin for adding/changing/deleting surrounding delimiter pairs.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.surround",
      "link": "https://github.com/echasnovski/mini.nvim#minisurround",
      "desc": "Module of `mini.nvim` for working with text surroundings (add, delete, replace, find, highlight). Fully supports dot-repeat.",
      "isGH": true
    },
    {
      "gh": "m-demare/hlargs.nvim",
      "link": "https://github.com/m-demare/hlargs.nvim",
      "desc": "Highlight arguments' definitions and usages, using Treesitter.",
      "isGH": true
    }
  ],
  "Terminal integration": [
    {
      "gh": "LoricAndre/OneTerm.nvim",
      "link": "https://github.com/LoricAndre/OneTerm.nvim",
      "desc": "Plugin framework for running commands in the terminal.",
      "isGH": true
    },
    {
      "gh": "nikvdp/neomux",
      "link": "https://github.com/nikvdp/neomux",
      "desc": "Control Neovim from shells running inside Neovim.",
      "isGH": true
    },
    {
      "gh": "akinsho/nvim-toggleterm.lua",
      "link": "https://github.com/akinsho/nvim-toggleterm.lua",
      "desc": "A Neovim Lua plugin to help easily manage multiple terminal windows.",
      "isGH": true
    },
    {
      "gh": "norcalli/nvim-terminal.lua",
      "link": "https://github.com/norcalli/nvim-terminal.lua",
      "desc": "A high performance filetype mode for Neovim which leverages conceal and highlights your buffer with the correct color codes.",
      "isGH": true
    },
    {
      "gh": "numToStr/FTerm.nvim",
      "link": "https://github.com/numToStr/FTerm.nvim",
      "desc": "No nonsense floating terminal written in Lua.",
      "isGH": true
    },
    {
      "gh": "pianocomposer321/consolation.nvim",
      "link": "https://github.com/pianocomposer321/consolation.nvim",
      "desc": "A general-purpose terminal wrapper and management plugin for Neovim, written in Lua.",
      "isGH": true
    },
    {
      "gh": "jghauser/kitty-runner.nvim",
      "link": "https://github.com/jghauser/kitty-runner.nvim",
      "desc": "Poor man's REPL. Easily send buffer lines and commands to a kitty terminal.",
      "isGH": true
    },
    {
      "gh": "jlesquembre/nterm.nvim",
      "link": "https://github.com/jlesquembre/nterm.nvim",
      "desc": "A Neovim plugin to interact with the terminal, with notifications.",
      "isGH": true
    },
    {
      "gh": "s1n7ax/nvim-terminal",
      "link": "https://github.com/s1n7ax/nvim-terminal",
      "desc": "A simple & easy to use multi-terminal plugin.",
      "isGH": true
    },
    {
      "gh": "m00qek/baleia.nvim",
      "link": "https://github.com/m00qek/baleia.nvim",
      "desc": "Colorize text with ANSI escape sequences (8, 16, 256 or TrueColor).",
      "isGH": true
    }
  ],
  "Snippet": [
    {
      "gh": "norcalli/snippets.nvim",
      "link": "https://github.com/norcalli/snippets.nvim",
      "desc": "Snippets in Lua.",
      "isGH": true
    },
    {
      "gh": "L3MON4D3/LuaSnip",
      "link": "https://github.com/L3MON4D3/LuaSnip",
      "desc": "A snippet engine for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "smjonas/snippet-converter.nvim",
      "link": "https://github.com/smjonas/snippet-converter.nvim",
      "desc": "Convert snippets between the most common snippet formats and modify them using a few lines of Lua code.",
      "isGH": true
    },
    {
      "gh": "dcampos/nvim-snippy",
      "link": "https://github.com/dcampos/nvim-snippy",
      "desc": "Snippet plugin written in Lua with support for [vim-snippets](https://github.com/honza/vim-snippets).",
      "isGH": true
    },
    {
      "gh": "ellisonleao/carbon-now.nvim",
      "link": "https://github.com/ellisonleao/carbon-now.nvim",
      "desc": "Create beautiful code snippets directly from Neovim.",
      "isGH": true
    }
  ],
  "Register": [
    {
      "gh": "gennaro-tedesco/nvim-peekup",
      "link": "https://github.com/gennaro-tedesco/nvim-peekup",
      "desc": "Dynamically interact with vim registers.",
      "isGH": true
    },
    {
      "gh": "tversteeg/registers.nvim",
      "link": "https://github.com/tversteeg/registers.nvim",
      "desc": "Non-obtrusive minimal preview of vim registers.",
      "isGH": true
    },
    {
      "gh": "acksld/nvim-neoclip.lua",
      "link": "https://github.com/AckslD/nvim-neoclip.lua",
      "desc": "Clipboard manager Neovim plugin with telescope integration.",
      "isGH": true
    }
  ],
  "Marks": [
    {
      "gh": "chentoast/marks.nvim",
      "link": "https://github.com/chentoast/marks.nvim",
      "desc": "A better user experience for viewing and interacting with vim marks.",
      "isGH": true
    },
    {
      "gh": "ThePrimeagen/harpoon",
      "link": "https://github.com/ThePrimeagen/harpoon",
      "desc": "A per project, auto updating and editable marks utility for fast file navigation.",
      "isGH": true
    }
  ],
  "Fuzzy Finder": [
    {
      "gh": "nvim-telescope/telescope.nvim",
      "link": "https://github.com/nvim-telescope/telescope.nvim",
      "desc": "Telescope.nvim is a highly [extendable](https://github.com/nvim-telescope/telescope.nvim/wiki/Extensions) fuzzy finder over lists. Built on the latest awesome features from Neovim core. Telescope is centered around modularity, allowing for easy customization.",
      "isGH": true
    },
    {
      "gh": "vijaymarupudi/nvim-fzf",
      "link": "https://github.com/vijaymarupudi/nvim-fzf",
      "desc": "A Lua API for using fzf in `Neovim` (>= 0.5). Allows for full asynchronicity for UI speed and usability.",
      "isGH": true
    },
    {
      "gh": "camspiers/snap",
      "link": "https://github.com/camspiers/snap",
      "desc": "An extensible fuzzy finder. Similar to Telescope, and optimized for performance, especially when grepping in large codebases.",
      "isGH": true
    },
    {
      "gh": "ibhagwan/fzf-lua",
      "link": "https://github.com/ibhagwan/fzf-lua",
      "desc": "The Lua version of `fzf.vim`, high-performance and fully async, supports `nvim-web-devicons`, git indicators, LSP, quickfix/location lists and more. Also supports [`skim`](https://github.com/lotabout/skim) as its fzf binary.",
      "isGH": true
    },
    {
      "gh": "jvgrootveld/telescope-zoxide",
      "link": "https://github.com/jvgrootveld/telescope-zoxide",
      "desc": "Telescope integration for [zoxide](https://github.com/ajeetdsouza/zoxide), a smart directory picker that tracks your usage.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.fuzzy",
      "link": "https://github.com/echasnovski/mini.nvim#minifuzzy",
      "desc": "Module of `mini.nvim` with functions to perform fuzzy matching of one string to others along with fast Telescope sorter.",
      "isGH": true
    }
  ],
  "Note Taking": [
    {
      "gh": "0styx0/abbreinder.nvim",
      "link": "https://github.com/0styx0/abbreinder.nvim",
      "desc": "Abbreviation reminders for Neovim 0.5+.",
      "isGH": true
    },
    {
      "gh": "jakewvincent/mkdnflow.nvim",
      "link": "https://github.com/jakewvincent/mkdnflow.nvim",
      "desc": "Fluent markdown notebook navigation & management (create links, follow links, create and manage to-do lists, reference bib files, and more).",
      "isGH": true
    },
    {
      "gh": "oberblastmeister/neuron.nvim",
      "link": "https://github.com/oberblastmeister/neuron.nvim",
      "desc": "Note taking plugin for neuron that integrates with telescope.nvim.",
      "isGH": true
    },
    {
      "gh": "jbyuki/nabla.nvim",
      "link": "https://github.com/jbyuki/nabla.nvim",
      "desc": "Take your scientific notes in Neovim.",
      "isGH": true
    },
    {
      "gh": "nvim-neorg/neorg",
      "link": "https://github.com/nvim-neorg/neorg",
      "desc": "Modernity meets insane extensibility. The future of organizing your life in Neovim.",
      "isGH": true
    },
    {
      "gh": "nvim-orgmode/orgmode",
      "link": "https://github.com/nvim-orgmode/orgmode",
      "desc": "Orgmode clone written in Lua for Neovim 0.5+.",
      "isGH": true
    },
    {
      "gh": "NFrid/due.nvim",
      "link": "https://github.com/NFrid/due.nvim",
      "desc": "Displays due for a date string as a virtual text.",
      "isGH": true
    },
    {
      "gh": "jbyuki/venn.nvim",
      "link": "https://github.com/jbyuki/venn.nvim",
      "desc": "Draw ASCII diagrams in Neovim.",
      "isGH": true
    },
    {
      "gh": "stevearc/gkeep.nvim",
      "link": "https://github.com/stevearc/gkeep.nvim",
      "desc": "Google Keep integration for Neovim.",
      "isGH": true
    },
    {
      "gh": "renerocksai/telekasten.nvim",
      "link": "https://github.com/renerocksai/telekasten.nvim",
      "desc": "A Neovim (lua) plugin for working with a text-based, markdown zettelkasten / wiki and mixing it with a journal, based on telescope.nvim.",
      "isGH": true
    },
    {
      "gh": "mickael-menu/zk-nvim",
      "link": "https://github.com/mickael-menu/zk-nvim",
      "desc": "Neovim extension for zk, a plain text note-taking assistant.",
      "isGH": true
    },
    {
      "gh": "chrsm/impulse.nvim",
      "link": "https://github.com/chrsm/impulse.nvim",
      "desc": "Read Notion.so notes in Neovim.",
      "isGH": true
    }
  ],
  "Color": [
    {
      "gh": "norcalli/nvim-colorizer.lua",
      "link": "https://github.com/norcalli/nvim-colorizer.lua",
      "desc": "A high-performance color highlighter for Neovim which has no external dependencies!.",
      "isGH": true
    },
    {
      "gh": "sunjon/Shade.nvim",
      "link": "https://github.com/sunjon/Shade.nvim",
      "desc": "Shade is a Neovim plugin that dims your inactive windows, making it easier to see the active window at a glance.",
      "isGH": true
    },
    {
      "gh": "winston0410/range-highlight.nvim",
      "link": "https://github.com/winston0410/range-highlight.nvim",
      "desc": "An extremely lightweight plugin (~ 120loc) that highlights ranges you have entered in commandline.",
      "isGH": true
    },
    {
      "gh": "xiyaowong/nvim-transparent",
      "link": "https://github.com/xiyaowong/nvim-transparent",
      "desc": "Make your Neovim transparent.",
      "isGH": true
    },
    {
      "gh": "folke/twilight.nvim",
      "link": "https://github.com/folke/twilight.nvim",
      "desc": "Dim inactive portions of the code you're editing using TreeSitter.",
      "isGH": true
    },
    {
      "gh": "koenverburg/peepsight.nvim",
      "link": "https://github.com/koenverburg/peepsight.nvim",
      "desc": "Focus only the function your cursor is in.",
      "isGH": true
    },
    {
      "gh": "ziontee113/color-picker.nvim",
      "link": "https://github.com/ziontee113/color-picker.nvim",
      "desc": "Plugin that lets users choose & modify RGB/HSL/HEX colors inside Neovim.",
      "isGH": true
    }
  ],
  "Colorscheme Creation": [
    {
      "gh": "tjdevries/colorbuddy.nvim",
      "link": "https://github.com/tjdevries/colorbuddy.nvim",
      "desc": "A colorscheme helper for Neovim. Written in Lua! Quick & Easy Color Schemes 😄.",
      "isGH": true
    },
    {
      "gh": "norcalli/nvim-base16.lua",
      "link": "https://github.com/norcalli/nvim-base16.lua",
      "desc": "Programmatic Lua library for setting base16 themes in Neovim.",
      "isGH": true
    },
    {
      "gh": "rktjmp/lush.nvim",
      "link": "https://github.com/rktjmp/lush.nvim",
      "desc": "Define Neovim themes as a DSL in Lua, with real-time feedback.",
      "isGH": true
    },
    {
      "gh": "Iron-E/nvim-highlite",
      "link": "https://github.com/Iron-E/nvim-highlite",
      "desc": "A colorscheme template that is \"lite\" on logic for the developer.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.base16",
      "link": "https://github.com/echasnovski/mini.nvim#minibase16",
      "desc": "Module of `mini.nvim` with fast implementation of base16 theme for manually supplied palette.",
      "isGH": true
    },
    {
      "gh": "ThemerCorp/themer.lua",
      "link": "https://github.com/themercorp/themer.lua",
      "desc": "A simple highlighter plugin for neovim. It has a huge collection of colorschemes. It also has ability to create colorschemes for vim/neovim and other supported apps (such as kitty and alacritty).",
      "isGH": true
    }
  ],
  "Colorscheme": [
    {
      "gh": "shaeinst/roshnivim-cs",
      "link": "https://github.com/shaeinst/roshnivim-cs",
      "desc": "Colorscheme for Neovim written in Lua, specially made for roshnivim with Tree-sitter support.",
      "isGH": true
    },
    {
      "gh": "rafamadriz/neon",
      "link": "https://github.com/rafamadriz/neon",
      "desc": "Customizable colorscheme with excellent italic and bold support, dark and light variants. Made to work and look good with Tree-sitter.",
      "isGH": true
    },
    {
      "gh": "tomasiser/vim-code-dark",
      "link": "https://github.com/tomasiser/vim-code-dark",
      "desc": "A dark color scheme heavily inspired by the look of the Dark+ scheme of Visual Studio Code.",
      "isGH": true
    },
    {
      "gh": "Mofiqul/vscode.nvim",
      "link": "https://github.com/Mofiqul/vscode.nvim",
      "desc": "A Lua port of vim-code-dark colorscheme for Neovim with vscode light and dark theme.",
      "isGH": true
    },
    {
      "gh": "marko-cerovac/material.nvim",
      "link": "https://github.com/marko-cerovac/material.nvim",
      "desc": "Material.nvim is a highly configurable colorscheme written in Lua and based on the material palette.",
      "isGH": true
    },
    {
      "gh": "bluz71/vim-nightfly-guicolors",
      "link": "https://github.com/bluz71/vim-nightfly-guicolors",
      "desc": "Nightfly is a dark GUI color scheme heavily inspired by Sarah Drasner's Night Owl theme.",
      "isGH": true
    },
    {
      "gh": "bluz71/vim-moonfly-colors",
      "link": "https://github.com/bluz71/vim-moonfly-colors",
      "desc": "Moonfly is a dark color scheme with Tree-sitter support.",
      "isGH": true
    },
    {
      "gh": "ChristianChiarulli/nvcode-color-schemes.vim",
      "link": "https://github.com/ChristianChiarulli/nvcode-color-schemes.vim",
      "desc": "Nvcode, onedark, nord colorschemes with Tree-sitter support.",
      "isGH": true
    },
    {
      "gh": "folke/tokyonight.nvim",
      "link": "https://github.com/folke/tokyonight.nvim",
      "desc": "A clean, dark and light Neovim theme written in Lua, with support for LSP, Tree-sitter and lots of plugins.",
      "isGH": true
    },
    {
      "gh": "sainnhe/sonokai",
      "link": "https://github.com/sainnhe/sonokai",
      "desc": "High Contrast & Vivid Color Scheme based on Monokai Pro.",
      "isGH": true
    },
    {
      "gh": "kyazdani42/blue-moon",
      "link": "https://github.com/kyazdani42/blue-moon",
      "desc": "A dark color scheme for Neovim derived from palenight and carbonight.",
      "isGH": true
    },
    {
      "gh": "mhartington/oceanic-next",
      "link": "https://github.com/mhartington/oceanic-next",
      "desc": "Oceanic Next theme for Neovim.",
      "isGH": true
    },
    {
      "gh": "glepnir/zephyr-nvim",
      "link": "https://github.com/glepnir/zephyr-nvim",
      "desc": "A dark colorscheme with Tree-sitter support.",
      "isGH": true
    },
    {
      "gh": "rockerBOO/boo-colorscheme-nvim",
      "link": "https://github.com/rockerBOO/boo-colorscheme-nvim",
      "desc": "A colorscheme for Neovim with handcrafted support for LSP, Tree-sitter.",
      "isGH": true
    },
    {
      "gh": "RishabhRD/nvim-rdark",
      "link": "https://github.com/RishabhRD/nvim-rdark",
      "desc": "A dark colorscheme for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "ishan9299/modus-theme-vim",
      "link": "https://github.com/ishan9299/modus-theme-vim",
      "desc": "This is a color scheme developed by Protesilaos Stavrou for emacs.",
      "isGH": true
    },
    {
      "gh": "sainnhe/edge",
      "link": "https://github.com/sainnhe/edge",
      "desc": "Clean & Elegant Color Scheme inspired by Atom One and Material.",
      "isGH": true
    },
    {
      "gh": "theniceboy/nvim-deus",
      "link": "https://github.com/theniceboy/nvim-deus",
      "desc": "Vim-deus with Tree-sitter support.",
      "isGH": true
    },
    {
      "gh": "bkegley/gloombuddy",
      "link": "https://github.com/bkegley/gloombuddy",
      "desc": "Gloom inspired theme for Neovim.",
      "isGH": true
    },
    {
      "gh": "Th3Whit3Wolf/one-nvim",
      "link": "https://github.com/Th3Whit3Wolf/one-nvim",
      "desc": "An Atom One inspired dark and light colorscheme for Neovim.",
      "isGH": true
    },
    {
      "gh": "PHSix/nvim-hybrid",
      "link": "https://github.com/PHSix/nvim-hybrid",
      "desc": "A Neovim colorscheme write in Lua.",
      "isGH": true
    },
    {
      "gh": "Th3Whit3Wolf/space-nvim",
      "link": "https://github.com/Th3Whit3Wolf/space-nvim",
      "desc": "A spacemacs inspired dark and light colorscheme for Neovim.",
      "isGH": true
    },
    {
      "gh": "yonlu/omni.vim",
      "link": "https://github.com/yonlu/omni.vim",
      "desc": "Omni color scheme for Vim.",
      "isGH": true
    },
    {
      "gh": "ray-x/aurora",
      "link": "https://github.com/ray-x/aurora",
      "desc": "A 24-bit dark theme with Tree-sitter and LSP support.",
      "isGH": true
    },
    {
      "gh": "tanvirtin/monokai.nvim",
      "link": "https://github.com/tanvirtin/monokai.nvim",
      "desc": "Monokai theme for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "savq/melange",
      "link": "https://github.com/savq/melange",
      "desc": "Dark color scheme for Neovim and Vim 🗡️.",
      "isGH": true
    },
    {
      "gh": "RRethy/nvim-base16",
      "link": "https://github.com/RRethy/nvim-base16",
      "desc": "Neovim plugin for building base16 colorschemes. Includes support for Treesitter and LSP highlight groups.",
      "isGH": true
    },
    {
      "gh": "fenetikm/falcon",
      "link": "https://github.com/fenetikm/falcon",
      "desc": "A colour scheme for terminals, Vim and friends.",
      "isGH": true
    },
    {
      "gh": "andersevenrud/nordic.nvim",
      "link": "https://github.com/andersevenrud/nordic.nvim",
      "desc": "A nord-esque colorscheme.",
      "isGH": true
    },
    {
      "gh": "shaunsingh/nord.nvim",
      "link": "https://github.com/shaunsingh/nord.nvim",
      "desc": "Neovim theme based off of the Nord Color Palette.",
      "isGH": true
    },
    {
      "gh": "ishan9299/nvim-solarized-lua",
      "link": "https://github.com/ishan9299/nvim-solarized-lua",
      "desc": "Solarized colorscheme in Lua for Neovim 0.5.",
      "isGH": true
    },
    {
      "gh": "shaunsingh/moonlight.nvim",
      "link": "https://github.com/shaunsingh/moonlight.nvim",
      "desc": "Port of VSCode's Moonlight colorscheme for NeoVim, written in Lua with built-in support for native LSP, Tree-sitter and many more plugins.",
      "isGH": true
    },
    {
      "gh": "navarasu/onedark.nvim",
      "link": "https://github.com/navarasu/onedark.nvim",
      "desc": "A One Dark Theme for Neovim 0.5 written in Lua based on Atom's One Dark Theme.",
      "isGH": true
    },
    {
      "gh": "lourenci/github-colors",
      "link": "https://github.com/lourenci/github-colors",
      "desc": "GitHub colors leveraging Tree-sitter to get 100% accuracy.",
      "isGH": true
    },
    {
      "gh": "sainnhe/gruvbox-material",
      "link": "https://github.com/sainnhe/gruvbox-material",
      "desc": "Gruvbox modification with softer contrast and Tree-sitter support.",
      "isGH": true
    },
    {
      "gh": "sainnhe/everforest",
      "link": "https://github.com/sainnhe/everforest",
      "desc": "A green based colorscheme designed to be warm, soft and easy on the eyes.",
      "isGH": true
    },
    {
      "gh": "NTBBloodbath/doom-one.nvim",
      "link": "https://github.com/NTBBloodbath/doom-one.nvim",
      "desc": "Lua port of doom-emacs' doom-one for Neovim.",
      "isGH": true
    },
    {
      "gh": "dracula/vim",
      "link": "https://github.com/dracula/vim",
      "desc": "Famous beautiful dark powered theme.",
      "isGH": true
    },
    {
      "gh": "Mofiqul/dracula.nvim",
      "link": "https://github.com/Mofiqul/dracula.nvim",
      "desc": "Dracula colorscheme for neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "yashguptaz/calvera-dark.nvim",
      "link": "https://github.com/yashguptaz/calvera-dark.nvim",
      "desc": "A port of [VSCode Calvara Dark](https://github.com/saurabhdaware/vscode-calvera-dark) Theme to Neovim with Tree-sitter and many other plugins support.",
      "isGH": true
    },
    {
      "gh": "nxvu699134/vn-night.nvim",
      "link": "https://github.com/nxvu699134/vn-night.nvim",
      "desc": "A dark Neovim colorscheme written in Lua. Support built-in LSP and Tree-sitter.",
      "isGH": true
    },
    {
      "gh": "adisen99/codeschool.nvim",
      "link": "https://github.com/adisen99/codeschool.nvim",
      "desc": "Codeschool colorscheme for Neovim written in Lua with Tree-sitter and built-in lsp support.",
      "isGH": true
    },
    {
      "gh": "projekt0n/github-nvim-theme",
      "link": "https://github.com/projekt0n/github-nvim-theme",
      "desc": "A GitHub theme for Neovim, kitty, alacritty written in Lua. Support built-in LSP and Tree-sitter.",
      "isGH": true
    },
    {
      "gh": "kdheepak/monochrome.nvim",
      "link": "https://github.com/kdheepak/monochrome.nvim",
      "desc": "A 16 bit monochrome colorscheme that uses hsluv for perceptually distinct gray colors, with support for Tree-sitter and other commonly used plugins.",
      "isGH": true
    },
    {
      "gh": "rose-pine/neovim",
      "link": "https://github.com/rose-pine/neovim",
      "desc": "All natural pine, faux fur and a bit of soho vibes for the classy minimalist.",
      "isGH": true
    },
    {
      "gh": "mcchrish/zenbones.nvim",
      "link": "https://github.com/mcchrish/zenbones.nvim",
      "desc": "A collection of vim/neovim colorschemes designed to highlight code using contrasts and font variations.",
      "isGH": true
    },
    {
      "gh": "catppuccin/nvim",
      "link": "https://github.com/catppuccin/nvim",
      "desc": "Warm mid-tone dark theme to show off your vibrant self! with support for native LSP, Tree-sitter, and more 🍨!",
      "isGH": true
    },
    {
      "gh": "FrenzyExists/aquarium-vim",
      "link": "https://github.com/FrenzyExists/aquarium-vim",
      "desc": "A dark, yet vibrant colorscheme for Neovim.",
      "isGH": true
    },
    {
      "gh": "EdenEast/nightfox.nvim",
      "link": "https://github.com/EdenEast/nightfox.nvim",
      "desc": "A soft dark, fully customizable Neovim theme, with support for lsp, treesitter and a variety of plugins.",
      "isGH": true
    },
    {
      "gh": "kvrohit/substrata.nvim",
      "link": "https://github.com/kvrohit/substrata.nvim",
      "desc": "A cold, dark color scheme for Neovim written in Lua ported from [arzg/vim-substrata](https://github.com/arzg/vim-substrata) theme.",
      "isGH": true
    },
    {
      "gh": "ldelossa/vimdark",
      "link": "https://github.com/ldelossa/vimdark",
      "desc": "A minimal Vim theme for night time. Loosely based on vim-monotonic and chrome's dark reader extension. A light theme is included as well for the day time.",
      "isGH": true
    },
    {
      "gh": "mangeshrex/uwu.vim",
      "link": "https://github.com/Mangeshrex/uwu.vim",
      "desc": "A beautiful and dark vim colorscheme written in vimscript.",
      "isGH": true
    },
    {
      "gh": "adisen99/apprentice.nvim",
      "link": "https://github.com/adisen99/apprentice.nvim",
      "desc": "Colorscheme for Neovim written in Lua based on the [Apprentice](https://github.com/romainl/Apprentice) color pattete with Tree-sitter and built-in lsp support.",
      "isGH": true
    },
    {
      "gh": "olimorris/onedarkpro.nvim",
      "link": "https://github.com/olimorris/onedarkpro.nvim",
      "desc": "One Dark Pro theme for Neovim, written in Lua and based on the VS Code theme. Includes dark and light themes with completely customisable colors, styles and highlights.",
      "isGH": true
    },
    {
      "gh": "rmehri01/onenord.nvim",
      "link": "https://github.com/rmehri01/onenord.nvim",
      "desc": "A Neovim theme that combines the Nord and Atom One Dark color palettes for a more vibrant programming experience.",
      "isGH": true
    },
    {
      "gh": "RishabhRD/gruvy",
      "link": "https://github.com/RishabhRD/gruvy",
      "desc": "Gruvbuddy without colorbuddy using Lush.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#minischeme",
      "link": "https://github.com/echasnovski/mini.nvim#plugin-colorscheme",
      "desc": "Color scheme of `mini.nvim` which is a variant of base16 with accent colors chosen according to optimal perceptual uniformity.",
      "isGH": true
    },
    {
      "gh": "luisiacc/gruvbox-baby",
      "link": "https://github.com/luisiacc/gruvbox-baby",
      "desc": "A modern gruvbox theme with full treesitter support.",
      "isGH": true
    },
    {
      "gh": "titanzero/zephyrium",
      "link": "https://github.com/titanzero/zephyrium",
      "desc": "A zephyr-esque theme, written in Lua, with TreeSitter support.",
      "isGH": true
    },
    {
      "gh": "rebelot/kanagawa.nvim",
      "link": "https://github.com/rebelot/kanagawa.nvim",
      "desc": "NeoVim dark colorscheme inspired by the colors of the famous painting by Katsushika Hokusai.",
      "isGH": true
    },
    {
      "gh": "tiagovla/tokyodark.nvim",
      "link": "https://github.com/tiagovla/tokyodark.nvim",
      "desc": "A clean dark theme written in lua for neovim 0.5 and above.",
      "isGH": true
    },
    {
      "gh": "cpea2506/one_monokai.nvim",
      "link": "https://github.com/cpea2506/one_monokai.nvim",
      "desc": "One Monokai theme for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "phha/zenburn.nvim",
      "link": "https://github.com/phha/zenburn.nvim",
      "desc": "A low-contrast dark colorscheme with support for various plugins.",
      "isGH": true
    },
    {
      "gh": "kvrohit/rasmus.nvim",
      "link": "https://github.com/kvrohit/rasmus.nvim",
      "desc": "A dark color scheme for Neovim written in Lua ported from [rsms/sublime-theme](https://github.com/rsms/sublime-theme) theme.",
      "isGH": true
    },
    {
      "gh": "chrsm/paramount-ng.nvim",
      "link": "https://github.com/chrsm/paramount-ng.nvim",
      "desc": "A dark color scheme written using Lush. Treesitter supported.",
      "isGH": true
    },
    {
      "gh": "kaiuri/nvim-juliana",
      "link": "https://github.com/kaiuri/nvim-juliana",
      "desc": "Port of Sublime's Mariana Theme to Neovim for short attention span developers with Tree-sitter support.",
      "isGH": true
    },
    {
      "gh": "lmburns/kimbox",
      "link": "https://github.com/lmburns/kimbox",
      "desc": "A colorscheme with a dark background, and vibrant foreground that is centered around the color brown. A modification of [Kimbie Dark](https://marketplace.visualstudio.com/items?itemName=dnamsons.kimbie-dark-plus).",
      "isGH": true
    },
    {
      "gh": "rockyzhang24/arctic.nvim",
      "link": "https://github.com/rockyzhang24/arctic.nvim",
      "desc": "A Neovim colorscheme ported from VSCode Dark+ theme with the strict and precise color picking for both the editor and UI.",
      "isGH": true
    },
    {
      "gh": "meliora-theme/neovim",
      "link": "https://github.com/meliora-theme/neovim",
      "desc": "Warm and cozy theme for Neovim.",
      "isGH": true
    },
    {
      "gh": "Yazeed1s/minimal.nvim",
      "link": "https://github.com/yazeed1s/minimal.nvim",
      "desc": "Two tree-sitter supported colorschemes that are inspired by base16-tomorrow-night and monokai-pro.",
      "isGH": true
    },
    {
      "gh": "tjdevries/gruvbuddy.nvim",
      "link": "https://github.com/tjdevries/gruvbuddy.nvim",
      "desc": "Gruvbox colors.",
      "isGH": true
    },
    {
      "gh": "ellisonleao/gruvbox.nvim",
      "link": "https://github.com/ellisonleao/gruvbox.nvim",
      "desc": "Gruvbox community colorscheme Lua port.",
      "isGH": true
    },
    {
      "gh": "metalelf0/jellybeans-nvim",
      "link": "https://github.com/metalelf0/jellybeans-nvim",
      "desc": "A port of jellybeans colorscheme for Neovim.",
      "isGH": true
    },
    {
      "gh": "lalitmee/cobalt2.nvim",
      "link": "https://github.com/lalitmee/cobalt2.nvim",
      "desc": "A port of cobalt2 colorscheme for Neovim using colorbuddy.",
      "isGH": true
    }
  ],
  "Utility": [
    {
      "gh": "nyngwang/NeoNoName.lua",
      "link": "https://github.com/nyngwang/NeoNoName.lua",
      "desc": "A layout-preserving buffer-deleter for Neovim.",
      "isGH": true
    },
    {
      "gh": "famiu/bufdelete.nvim",
      "link": "https://github.com/famiu/bufdelete.nvim",
      "desc": "Delete Neovim buffers without losing your window layout.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.bufremove",
      "link": "https://github.com/echasnovski/mini.nvim#minibufremove",
      "desc": "Module of `mini.nvim` for buffer removing (unshow, delete, wipeout) while saving window layout.",
      "isGH": true
    },
    {
      "gh": "jghauser/mkdir.nvim",
      "link": "https://github.com/jghauser/mkdir.nvim",
      "desc": "Automatically create missing directories when saving files.",
      "isGH": true
    },
    {
      "gh": "matbme/JABS.nvim",
      "link": "https://github.com/matbme/JABS.nvim",
      "desc": "Pretty and minimal buffer switcher window.",
      "isGH": true
    },
    {
      "gh": "clojure-vim/jazz.nvim",
      "link": "https://github.com/clojure-vim/jazz.nvim",
      "desc": "Acid + Impromptu = Jazz.",
      "isGH": true
    },
    {
      "gh": "sudormrfbin/cheatsheet.nvim",
      "link": "https://github.com/sudormrfbin/cheatsheet.nvim",
      "desc": "Searchable cheatsheet.",
      "isGH": true
    },
    {
      "gh": "code-biscuits/nvim-biscuits",
      "link": "https://github.com/code-biscuits/nvim-biscuits",
      "desc": "A Neovim port of Assorted Biscuits. Ends up with more supported languages too.",
      "isGH": true
    },
    {
      "gh": "Pocco81/AbbrevMan.nvim",
      "link": "https://github.com/Pocco81/AbbrevMan.nvim",
      "desc": "A NeoVim plugin for managing vim abbreviations.",
      "isGH": true
    },
    {
      "gh": "kazhala/close-buffers.nvim",
      "link": "https://github.com/kazhala/close-buffers.nvim",
      "desc": "Delete multiple vim buffers based on different conditions.",
      "isGH": true
    },
    {
      "gh": "rktjmp/paperplanes.nvim",
      "link": "https://github.com/rktjmp/paperplanes.nvim",
      "desc": "Post selections or buffers to online paste bins.",
      "isGH": true
    },
    {
      "gh": "max397574/better-escape.nvim",
      "link": "https://github.com/max397574/better-escape.nvim",
      "desc": "Create shortcuts to escape insert mode without getting delay.",
      "isGH": true
    },
    {
      "gh": "rcarriga/nvim-notify",
      "link": "https://github.com/rcarriga/nvim-notify",
      "desc": "A fancy, configurable, notification manager for NeoVim.",
      "isGH": true
    },
    {
      "gh": "saifulapm/chartoggle.nvim",
      "link": "https://github.com/saifulapm/chartoggle.nvim",
      "desc": "Toggle any character at end of line for Neovim.",
      "isGH": true
    },
    {
      "gh": "stevearc/dressing.nvim",
      "link": "https://github.com/stevearc/dressing.nvim",
      "desc": "Improve the built-in `vim.ui` interfaces with telescope, fzf, etc.",
      "isGH": true
    },
    {
      "gh": "gaborvecsei/cryptoprice.nvim",
      "link": "https://github.com/gaborvecsei/cryptoprice.nvim",
      "desc": "Check the price of the defined cryptocurrencies.",
      "isGH": true
    },
    {
      "gh": "jghauser/fold-cycle.nvim",
      "link": "https://github.com/jghauser/fold-cycle.nvim",
      "desc": "Cycle folds open or closed.",
      "isGH": true
    },
    {
      "gh": "rgroli/other.nvim",
      "link": "https://github.com/rgroli/other.nvim",
      "desc": "Open alternative files for the current buffer.",
      "isGH": true
    },
    {
      "gh": "toppair/reach.nvim",
      "link": "https://github.com/toppair/reach.nvim",
      "desc": "Buffer, mark, tabpage switcher for Neovim.",
      "isGH": true
    },
    {
      "gh": "axieax/urlview.nvim",
      "link": "https://github.com/axieax/urlview.nvim",
      "desc": "Browse all URLs in the current buffer.",
      "isGH": true
    },
    {
      "gh": "nkakouros-original/numbers.nvim",
      "link": "https://github.com/nkakouros-original/numbers.nvim",
      "desc": "Toggle relativenumber whenever it makes sense.",
      "isGH": true
    },
    {
      "gh": "crusj/structrue-go.nvim",
      "link": "https://github.com/crusj/structrue-go.nvim",
      "desc": "A better structured display of golang symbols information.",
      "isGH": true
    },
    {
      "gh": "someone-stole-my-name/yaml-companion.nvim",
      "link": "https://github.com/someone-stole-my-name/yaml-companion.nvim",
      "desc": "Get, set and autodetect YAML schemas in your buffers.",
      "isGH": true
    },
    {
      "gh": "ghillb/cybu.nvim",
      "link": "https://github.com/ghillb/cybu.nvim",
      "desc": "Displays a notification window with context when cycling buffers.",
      "isGH": true
    },
    {
      "gh": "crusj/bookmarks.nvim",
      "link": "https://github.com/crusj/bookmarks.nvim",
      "desc": "Remember file locations and sort by time and frequency.",
      "isGH": true
    },
    {
      "gh": "xiyaowong/virtcolumn.nvim",
      "link": "https://github.com/xiyaowong/virtcolumn.nvim",
      "desc": "Display a line as colorcolumn.",
      "isGH": true
    },
    {
      "gh": "m-demare/attempt.nvim",
      "link": "https://github.com/m-demare/attempt.nvim",
      "desc": "Manage and run temporary buffers.",
      "isGH": true
    },
    {
      "gh": "cuducos/yaml.nvim",
      "link": "https://github.com/cuducos/yaml.nvim",
      "desc": "Utils to work with YAML files.",
      "isGH": true
    },
    {
      "gh": "kevinhwang91/nvim-ufo",
      "link": "https://github.com/kevinhwang91/nvim-ufo",
      "desc": "Ultra fold in Neovim with modern looking and performance boosting.",
      "isGH": true
    },
    {
      "gh": "xiyaowong/link-visitor.nvim",
      "link": "https://github.com/xiyaowong/link-visitor.nvim",
      "desc": "Let me help you open the links.",
      "isGH": true
    },
    {
      "gh": "sitiom/nvim-numbertoggle",
      "link": "https://github.com/sitiom/nvim-numbertoggle",
      "desc": "Neovim plugin to automatically toggle between relative and absolute line numbers.",
      "isGH": true
    },
    {
      "gh": "anuvyklack/fold-preview",
      "link": "https://github.com/anuvyklack/fold-preview.nvim",
      "desc": "Preview closed fold without opening it.",
      "isGH": true
    }
  ],
  "Icon": [
    {
      "gh": "kyazdani42/nvim-web-devicons",
      "link": "https://github.com/kyazdani42/nvim-web-devicons",
      "desc": "A Lua fork of [vim-devicons](https://github.com/ryanoasis/vim-devicons).",
      "isGH": true
    },
    {
      "gh": "yamatsum/nvim-nonicons",
      "link": "https://github.com/yamatsum/nvim-nonicons",
      "desc": "Collection of configurations for nvim-web-devicons.",
      "isGH": true
    },
    {
      "gh": "ziontee113/icon-picker.nvim",
      "link": "https://github.com/ziontee113/icon-picker.nvim",
      "desc": "A Neovim plugin that helps you pick 𝑨𝕃𝚻 Font Characters, Symbols Σ, Nerd Font Icons  & Emojis ✨.",
      "isGH": true
    }
  ],
  "Debugging": [
    {
      "gh": "mfussenegger/nvim-dap",
      "link": "https://github.com/mfussenegger/nvim-dap",
      "desc": "Debug Adapter Protocol client implementation for Neovim.",
      "isGH": true
    },
    {
      "gh": "sakhnik/nvim-gdb",
      "link": "https://github.com/sakhnik/nvim-gdb",
      "desc": "Thin wrapper for GDB, LLDB, PDB/PDB++ and BashDB.",
      "isGH": true
    },
    {
      "gh": "rcarriga/nvim-dap-ui",
      "link": "https://github.com/rcarriga/nvim-dap-ui",
      "desc": "A UI for nvim-dap.",
      "isGH": true
    },
    {
      "gh": "Pocco81/DAPInstall.nvim",
      "link": "https://github.com/Pocco81/DAPInstall.nvim",
      "desc": "A NeoVim plugin for managing several debuggers for Nvim-dap.",
      "isGH": true
    },
    {
      "gh": "Weissle/persistent-breakpoints.nvim",
      "link": "https://github.com/Weissle/persistent-breakpoints.nvim",
      "desc": "Persistent breakpoints for nvim-dap.",
      "isGH": true
    }
  ],
  "Spellcheck": [
    {
      "gh": "lewis6991/spellsitter.nvim",
      "link": "https://github.com/lewis6991/spellsitter.nvim",
      "desc": "Enable Neovim's spell checker with tree-sitter.",
      "isGH": true
    }
  ],
  "Neovim Lua Development": [
    {
      "gh": "tjdevries/nlua.nvim",
      "link": "https://github.com/tjdevries/nlua.nvim",
      "desc": "Lua Development for Neovim.",
      "isGH": true
    },
    {
      "gh": "svermeulen/vimpeccable",
      "link": "https://github.com/svermeulen/vimpeccable",
      "desc": "Commands to help write your .vimrc in Lua or any Lua based language.",
      "isGH": true
    },
    {
      "gh": "nanotee/nvim-lua-guide",
      "link": "https://github.com/nanotee/nvim-lua-guide",
      "desc": "A guide to using Lua in Neovim.",
      "isGH": true
    },
    {
      "gh": "rafcamlet/nvim-luapad",
      "link": "https://github.com/rafcamlet/nvim-luapad",
      "desc": "Interactive real time Neovim scratchpad for embedded Lua engine - Type and watch!.",
      "isGH": true
    },
    {
      "gh": "nvim-lua/plenary.nvim",
      "link": "https://github.com/nvim-lua/plenary.nvim",
      "desc": "Plenary: full; complete; entire; absolute; unqualified. All the Lua functions I don't want to write twice.",
      "isGH": true
    },
    {
      "gh": "nvim-lua/popup.nvim",
      "link": "https://github.com/nvim-lua/popup.nvim",
      "desc": "An implementation of the Popup API from vim in Neovim.",
      "isGH": true
    },
    {
      "gh": "tjdevries/vlog.nvim",
      "link": "https://github.com/tjdevries/vlog.nvim",
      "desc": "Single file, no dependency, easy copy & paste log file to add to your Neovim Lua plugins.",
      "isGH": true
    },
    {
      "gh": "bfredl/nvim-luadev",
      "link": "https://github.com/bfredl/nvim-luadev",
      "desc": "REPL/debug console for Neovim Lua plugins. The `:Luadev` command will open an scratch window which will show output from executing Lua code.",
      "isGH": true
    },
    {
      "gh": "jbyuki/one-small-step-for-vimkind",
      "link": "https://github.com/jbyuki/one-small-step-for-vimkind",
      "desc": "An adapter for the Neovim Lua language. It allows you to debug any Lua code running in a Neovim instance (A Lua plugin that can debug Neovim Lua plugins).",
      "isGH": true
    },
    {
      "gh": "kkharji/sqlite.lua",
      "link": "https://github.com/kkharji/sqlite.lua",
      "desc": "SQLite/LuaJIT binding for Lua and Neovim.",
      "isGH": true
    },
    {
      "gh": "folke/lua-dev.nvim",
      "link": "https://github.com/folke/lua-dev.nvim",
      "desc": "Dev setup for init.Lua and plugin development with full signature help, docs and completion for the Neovim Lua API.",
      "isGH": true
    },
    {
      "gh": "MunifTanjim/nui.nvim",
      "link": "https://github.com/MunifTanjim/nui.nvim",
      "desc": "UI Component Library for Neovim.",
      "isGH": true
    },
    {
      "gh": "m00qek/plugin-template.nvim",
      "link": "https://github.com/m00qek/plugin-template.nvim",
      "desc": "A plugin template that setups test infrastructure and GitHub Actions.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.doc",
      "link": "https://github.com/echasnovski/mini.nvim#minidoc",
      "desc": "Module of `mini.nvim` for generation of help files from EmmyLua-like annotations. Allows flexible customization of output via hook functions.",
      "isGH": true
    },
    {
      "gh": "nanotee/luv-vimdocs",
      "link": "https://github.com/nanotee/luv-vimdocs",
      "desc": "The luv docs in vimdoc format.",
      "isGH": true
    },
    {
      "gh": "milisims/nvim-luaref",
      "link": "https://github.com/milisims/nvim-luaref",
      "desc": "A reference for builtin lua functions.",
      "isGH": true
    },
    {
      "gh": "ellisonleao/nvim-plugin-template",
      "link": "https://github.com/ellisonleao/nvim-plugin-template",
      "desc": "Another neovim plugin template, using GitHub's template feature.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.test",
      "link": "https://github.com/echasnovski/mini.nvim#minitest",
      "desc": "Module of `mini.nvim` with framework for writing extensive Neovim plugin tests. Supports hierarchical tests, hooks, parametrization, filtering, screen tests, \"busted-style\" emulation, customizable reporters, and more.",
      "isGH": true
    }
  ],
  "Fennel": [
    {
      "gh": "Olical/aniseed",
      "link": "https://github.com/Olical/aniseed",
      "desc": "Configure and extend Neovim with Fennel (Lisp to Lua).",
      "isGH": true
    },
    {
      "gh": "Olical/conjure",
      "link": "https://github.com/Olical/conjure",
      "desc": "Interactive evaluation for Neovim (Clojure, Fennel, Janet, Racket, Hy, MIT Scheme, Guile).",
      "isGH": true
    },
    {
      "gh": "rktjmp/hotpot.nvim",
      "link": "https://github.com/rktjmp/hotpot.nvim",
      "desc": "Seamless, transparent Fennel inside Neovim.",
      "isGH": true
    },
    {
      "gh": "udayvir-singh/tangerine.nvim",
      "link": "https://github.com/udayvir-singh/tangerine.nvim",
      "desc": "Sweet :tangerine: Fennel integration for Neovim, aims to be as fast as possible.",
      "isGH": true
    },
    {
      "gh": "udayvir-singh/hibiscus.nvim",
      "link": "https://github.com/udayvir-singh/hibiscus.nvim",
      "desc": "Flavored :hibiscus: Fennel macro library for Neovim.",
      "isGH": true
    }
  ],
  "Tabline": [
    {
      "gh": "romgrk/barbar.nvim",
      "link": "https://github.com/romgrk/barbar.nvim",
      "desc": "The Neovim tabline plugin.",
      "isGH": true
    },
    {
      "gh": "akinsho/bufferline.nvim",
      "link": "https://github.com/akinsho/bufferline.nvim",
      "desc": "A snazzy buffer line for Neovim built using Lua.",
      "isGH": true
    },
    {
      "gh": "crispgm/nvim-tabline",
      "link": "https://github.com/crispgm/nvim-tabline",
      "desc": "Neovim port of tabline.vim with Lua.",
      "isGH": true
    },
    {
      "gh": "alvarosevilla95/luatab.nvim",
      "link": "https://github.com/alvarosevilla95/luatab.nvim",
      "desc": "A simple tabline written in Lua.",
      "isGH": true
    },
    {
      "gh": "johann2357/nvim-smartbufs",
      "link": "https://github.com/johann2357/nvim-smartbufs",
      "desc": "Smart buffer management in Neovim.",
      "isGH": true
    },
    {
      "gh": "kdheepak/tabline.nvim",
      "link": "https://github.com/kdheepak/tabline.nvim",
      "desc": "A \"buffer and tab\" tabline.",
      "isGH": true
    },
    {
      "gh": "noib3/cokeline.nvim",
      "link": "https://github.com/noib3/cokeline.nvim",
      "desc": "A Neovim bufferline for people with addictive personalities.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.tabline",
      "link": "https://github.com/echasnovski/mini.nvim#minitabline",
      "desc": "Module of `mini.nvim` for minimal tabline showing listed buffers in case of one tab and falling back to default otherwise.",
      "isGH": true
    },
    {
      "gh": "rafcamlet/tabline-framework.nvim",
      "link": "https://github.com/rafcamlet/tabline-framework.nvim",
      "desc": "User-friendly framework for building your dream tabline in a few lines of code.",
      "isGH": true
    },
    {
      "gh": "nanozuki/tabby.nvim",
      "link": "https://github.com/nanozuki/tabby.nvim",
      "desc": "A minimal, configurable, Neovim style tabline. Use your Neovim tabs as workspace multiplexer.",
      "isGH": true
    }
  ],
  "Statusline": [
    {
      "gh": "NTBBloodbath/galaxyline.nvim",
      "link": "https://github.com/NTBBloodbath/galaxyline.nvim",
      "desc": "Galaxyline componentizes Vim's statusline by having a provider for each text area. This means you can use the api provided by galaxyline to create the statusline that you want, easily.",
      "isGH": true
    },
    {
      "gh": "tjdevries/express_line.nvim",
      "link": "https://github.com/tjdevries/express_line.nvim",
      "desc": "Supports co-routines, functions and jobs.",
      "isGH": true
    },
    {
      "gh": "nvim-lualine/lualine.nvim",
      "link": "https://github.com/nvim-lualine/lualine.nvim",
      "desc": "A blazing fast and easy to configure Neovim statusline.",
      "isGH": true
    },
    {
      "gh": "adelarsq/neoline.vim",
      "link": "https://github.com/adelarsq/neoline.vim",
      "desc": "A light statusline/tabline plugin for Neovim using Lua.",
      "isGH": true
    },
    {
      "gh": "ojroques/nvim-hardline",
      "link": "https://github.com/ojroques/nvim-hardline",
      "desc": "A statusline / bufferline. It is inspired by [vim-airline](https://github.com/vim-airline/vim-airline) but aims to be as light and simple as possible.",
      "isGH": true
    },
    {
      "gh": "datwaft/bubbly.nvim",
      "link": "https://github.com/datwaft/bubbly.nvim",
      "desc": "Bubbly status line for Neovim.",
      "isGH": true
    },
    {
      "gh": "beauwilliams/statusline.lua",
      "link": "https://github.com/beauwilliams/statusline.lua",
      "desc": "A zero-config minimal statusline for Neovim written in Lua featuring awesome integrations and blazing speed!",
      "isGH": true
    },
    {
      "gh": "tamton-aquib/staline.nvim",
      "link": "https://github.com/tamton-aquib/staline.nvim",
      "desc": "A modern lightweight statusline for Neovim in Lua. Mainly uses unicode symbols for showing info.",
      "isGH": true
    },
    {
      "gh": "feline-nvim/feline.nvim",
      "link": "https://github.com/feline-nvim/feline.nvim",
      "desc": "A minimal, stylish and customizable statusline for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "windwp/windline.nvim",
      "link": "https://github.com/windwp/windline.nvim",
      "desc": "The next generation statusline for Neovim. Animation statusline.",
      "isGH": true
    },
    {
      "gh": "konapun/vacuumline.nvim",
      "link": "https://github.com/konapun/vacuumline.nvim",
      "desc": "A galaxyline configuration inspired by airline.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.statusline",
      "link": "https://github.com/echasnovski/mini.nvim#ministatusline",
      "desc": "Module of `mini.nvim` for minimal and fast statusline. Supports content change depending on window width.",
      "isGH": true
    },
    {
      "gh": "b0o/incline.nvim",
      "link": "https://github.com/b0o/incline.nvim",
      "desc": "Lightweight floating statuslines, intended for use with Neovim's new global statusline.",
      "isGH": true
    },
    {
      "gh": "rebelot/heirline.nvim",
      "link": "https://github.com/rebelot/heirline.nvim",
      "desc": "Heirline.nvim is a no-nonsense Neovim Statusline plugin designed around recursive inheritance to be exceptionally fast and versatile.",
      "isGH": true
    }
  ],
  "Winbar and Statusline component": [
    {
      "gh": "SmiteshP/nvim-gps",
      "link": "https://github.com/SmiteshP/nvim-gps",
      "desc": "A simple statusline component that shows your current code context using Treesitter.",
      "isGH": true
    },
    {
      "gh": "SmiteshP/nvim-navic",
      "link": "https://github.com/SmiteshP/nvim-navic",
      "desc": "A simple statusline/winbar component that shows your current code context using LSP.",
      "isGH": true
    }
  ],
  "Cursorline": [
    {
      "gh": "yamatsum/nvim-cursorline",
      "link": "https://github.com/yamatsum/nvim-cursorline",
      "desc": "A plugin for Neovim that highlights cursor words and lines.",
      "isGH": true
    },
    {
      "gh": "xiyaowong/nvim-cursorword",
      "link": "https://github.com/xiyaowong/nvim-cursorword",
      "desc": "Part of nvim-cursorline. Highlight the word under the cursor.",
      "isGH": true
    },
    {
      "gh": "RRethy/vim-illuminate",
      "link": "https://github.com/RRethy/vim-illuminate",
      "desc": "Highlight the word under the cursor. Neovim's builtin LSP is available, it can be used to highlight more intelligently.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.cursorword",
      "link": "https://github.com/echasnovski/mini.nvim#minicursorword",
      "desc": "Module of `mini.nvim` for automatic highlighting of word under cursor (displayed after customizable delay).",
      "isGH": true
    }
  ],
  "Startup": [
    {
      "gh": "glepnir/dashboard-nvim",
      "link": "https://github.com/glepnir/dashboard-nvim",
      "desc": "A minimalist dashboard for Neovim, inspired by doom-emacs.",
      "isGH": true
    },
    {
      "gh": "goolord/alpha-nvim",
      "link": "https://github.com/goolord/alpha-nvim",
      "desc": "A fast and highly customizable greeter like [vim-startify](https://github.com/mhinz/vim-startify)/dashboard-nvim for Neovim.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.starter",
      "link": "https://github.com/echasnovski/mini.nvim#ministarter",
      "desc": "Module of `mini.nvim` for start screen. Displayed items are fully customizable, item selection can be done using prefix query with instant visual feedback.",
      "isGH": true
    },
    {
      "gh": "henriquehbr/nvim-startup.lua",
      "link": "https://github.com/henriquehbr/nvim-startup.lua",
      "desc": "Displays Neovim startup time.",
      "isGH": true
    },
    {
      "gh": "startup-nvim/startup.nvim",
      "link": "https://github.com/startup-nvim/startup.nvim",
      "desc": "The fully customizable greeter for neovim.",
      "isGH": true
    }
  ],
  "Indent": [
    {
      "gh": "glepnir/indent-guides.nvim",
      "link": "https://github.com/glepnir/indent-guides.nvim",
      "desc": "Indent plugin.",
      "isGH": true
    },
    {
      "gh": "lukas-reineke/indent-blankline.nvim",
      "link": "https://github.com/lukas-reineke/indent-blankline.nvim",
      "desc": "IndentLine replacement in Lua with more features and treesitter support.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.indentscope",
      "link": "https://github.com/echasnovski/mini.nvim#miniindentscope",
      "desc": "Module of `mini.nvim` for visualizing and operating on indent scope. Supports customization of debounce delay, animation style, and different granularity of options for scope computing algorithm.",
      "isGH": true
    },
    {
      "gh": "NMAC427/guess-indent.nvim",
      "link": "https://github.com/NMAC427/guess-indent.nvim",
      "desc": "Automatic indentation style detection for Neovim.",
      "isGH": true
    },
    {
      "gh": "Darazaki/indent-o-matic",
      "link": "https://github.com/Darazaki/indent-o-matic",
      "desc": "Dumb automatic fast indentation detection for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "Abstract-IDE/penvim",
      "link": "https://github.com/Abstract-IDE/penvim",
      "desc": "Project's root directory and documents Indentation detector with project based config loader.",
      "isGH": true
    }
  ],
  "Game": [
    {
      "gh": "ThePrimeagen/vim-be-good",
      "link": "https://github.com/ThePrimeagen/vim-be-good",
      "desc": "Vim-be-good is a Neovim plugin designed to make you better at Vim Movements.",
      "isGH": true
    },
    {
      "gh": "ThePrimeagen/vim-apm",
      "link": "https://github.com/ThePrimeagen/vim-apm",
      "desc": "Vim APM, Actions per minute, is the greatest plugin since vim-slicedbread.",
      "isGH": true
    },
    {
      "gh": "alec-gibson/nvim-tetris",
      "link": "https://github.com/alec-gibson/nvim-tetris",
      "desc": "Bringing emacs' greatest feature to Neovim - Tetris!.",
      "isGH": true
    },
    {
      "gh": "seandewar/nvimesweeper",
      "link": "https://github.com/seandewar/nvimesweeper",
      "desc": "Play Minesweeper in your favourite text editor.",
      "isGH": true
    },
    {
      "gh": "seandewar/killersheep.nvim",
      "link": "https://github.com/seandewar/killersheep.nvim",
      "desc": "Neovim port of killersheep.",
      "isGH": true
    }
  ],
  "File explorer": [
    {
      "gh": "kyazdani42/nvim-tree.lua",
      "link": "https://github.com/kyazdani42/nvim-tree.lua",
      "desc": "A simple and fast file explorer tree for Neovim.",
      "isGH": true
    },
    {
      "gh": "luukvbaal/nnn.nvim",
      "link": "https://github.com/luukvbaal/nnn.nvim",
      "desc": "File explorer powered by [nnn](https://github.com/jarun/nnn) and Lua.",
      "isGH": true
    },
    {
      "gh": "tamago324/lir.nvim",
      "link": "https://github.com/tamago324/lir.nvim",
      "desc": "Simple file explorer.",
      "isGH": true
    },
    {
      "gh": "TimUntersberger/neofs",
      "link": "https://github.com/TimUntersberger/neofs",
      "desc": "A file manager for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "kevinhwang91/rnvimr",
      "link": "https://github.com/kevinhwang91/rnvimr",
      "desc": "A simple yet amazing file explorer for Neovim.",
      "isGH": true
    },
    {
      "gh": "Xuyuanp/yanil",
      "link": "https://github.com/Xuyuanp/yanil",
      "desc": "Yet Another Nerdtree In Lua.",
      "isGH": true
    },
    {
      "gh": "ms-jpq/chadtree",
      "link": "https://github.com/ms-jpq/chadtree",
      "desc": "File manager for Neovim. Better than NERDTree.",
      "isGH": true
    },
    {
      "gh": "is0n/fm-nvim",
      "link": "https://github.com/is0n/fm-nvim",
      "desc": "Neovim plugin that lets you use your favorite terminal file managers (and fuzzy finders) from within Neovim.",
      "isGH": true
    },
    {
      "gh": "nvim-neo-tree/neo-tree.nvim",
      "link": "https://github.com/nvim-neo-tree/neo-tree.nvim",
      "desc": "Neo-tree is a Neovim plugin to browse the file system and other tree like structures in whatever style suits you, including sidebars, floating windows, netrw split style, or all of them at once.",
      "isGH": true
    },
    {
      "gh": "elihunter173/dirbuf.nvim",
      "link": "https://github.com/elihunter173/dirbuf.nvim",
      "desc": "A file manager for Neovim which lets you edit your filesystem like you edit text.",
      "isGH": true
    },
    {
      "gh": "theblob42/drex.nvim",
      "link": "https://github.com/TheBlob42/drex.nvim",
      "desc": "A simple and configurable file explorer written in Lua.",
      "isGH": true
    },
    {
      "gh": "SidOfc/carbon.nvim",
      "link": "https://github.com/SidOfc/carbon.nvim",
      "desc": "The simple directory tree viewer for Neovim written in Lua.",
      "isGH": true
    }
  ],
  "Dependency management": [
    {
      "gh": "vuki656/package-info.nvim",
      "link": "https://github.com/vuki656/package-info.nvim",
      "desc": "Display latest package version as virtual text in package.json.",
      "isGH": true
    },
    {
      "gh": "Saecki/crates.nvim",
      "link": "https://github.com/Saecki/crates.nvim",
      "desc": " Rust dependency management for `Cargo.toml`.",
      "isGH": true
    }
  ],
  "Git": [
    {
      "gh": "f-person/git-blame.nvim",
      "link": "https://github.com/f-person/git-blame.nvim",
      "desc": "Show git blame info.",
      "isGH": true
    },
    {
      "gh": "lewis6991/gitsigns.nvim",
      "link": "https://github.com/lewis6991/gitsigns.nvim",
      "desc": "Git integration: signs, hunk actions, blame, etc.",
      "isGH": true
    },
    {
      "gh": "TimUntersberger/neogit",
      "link": "https://github.com/TimUntersberger/neogit",
      "desc": "A Magit clone for Neovim that may change some things to fit the Vim philosophy.",
      "isGH": true
    },
    {
      "gh": "tveskag/nvim-blame-line",
      "link": "https://github.com/tveskag/nvim-blame-line",
      "desc": "A small plugin that uses neovims virtual text to print git blame info at the end of the current line.",
      "isGH": true
    },
    {
      "gh": "ruifm/gitlinker.nvim",
      "link": "https://github.com/ruifm/gitlinker.nvim",
      "desc": "Generate shareable file permalinks for several git hosts. Inspired by tpope/vim-fugitive's :GBrowse.",
      "isGH": true
    },
    {
      "gh": "tanvirtin/vgit.nvim",
      "link": "https://github.com/tanvirtin/vgit.nvim",
      "desc": "Visual Git Plugin for Neovim to enhance your git experience.",
      "isGH": true
    },
    {
      "gh": "sindrets/diffview.nvim",
      "link": "https://github.com/sindrets/diffview.nvim",
      "desc": "Single tabpage interface for easily cycling through diffs for all modified files for any git rev.",
      "isGH": true
    },
    {
      "gh": "kdheepak/lazygit.nvim",
      "link": "https://github.com/kdheepak/lazygit.nvim",
      "desc": "Plugin for calling lazygit from within Neovim.",
      "isGH": true
    },
    {
      "gh": "AckslD/nvim-gfold.lua",
      "link": "https://github.com/AckslD/nvim-gfold.lua",
      "desc": "Plugin using [gfold](https://github.com/nickgerace/gfold) to switch repo and have statusline component.",
      "isGH": true
    }
  ],
  "Programming languages support": [
    {
      "gh": "go.nvim",
      "link": "https://github.com/ray-x/go.nvim",
      "desc": "Golang plugin based on lsp and Treesitter.",
      "isGH": true
    },
    {
      "gh": "akinsho/flutter-tools.nvim",
      "link": "https://github.com/akinsho/flutter-tools.nvim",
      "desc": "Build flutter and dart applications in Neovim using the native lsp.",
      "isGH": true
    },
    {
      "gh": "crispgm/nvim-go",
      "link": "https://github.com/crispgm/nvim-go",
      "desc": "A minimal implementation of Golang development plugin for Neovim.",
      "isGH": true
    },
    {
      "gh": "gennaro-tedesco/nvim-jqx",
      "link": "https://github.com/gennaro-tedesco/nvim-jqx",
      "desc": "Interactive interface for json files.",
      "isGH": true
    },
    {
      "gh": "edolphin-ydf/goimpl.nvim",
      "link": "https://github.com/edolphin-ydf/goimpl.nvim",
      "desc": "Generate interface stubs for a type.",
      "isGH": true
    },
    {
      "gh": "lean.nvim",
      "link": "https://github.com/Julian/lean.nvim",
      "desc": "Neovim support for the [Lean Theorem Prover](https://leanprover.github.io/).",
      "isGH": true
    },
    {
      "gh": "rafaelsq/nvim-goc.lua",
      "link": "https://github.com/rafaelsq/nvim-goc.lua",
      "desc": "Highlight your buffer with Golang Code Coverage.",
      "isGH": true
    },
    {
      "gh": "crusj/hierarchy-tree-go.nvim",
      "link": "https://github.com/crusj/hierarchy-tree-go.nvim",
      "desc": "Neovim plugin for go, callHierarchy ui tree.",
      "isGH": true
    },
    {
      "gh": "olexsmir/gopher.nvim",
      "link": "https://github.com/olexsmir/gopher.nvim/",
      "desc": "Plugin for making golang development easiest.",
      "isGH": true
    },
    {
      "gh": "gbprod/phpactor.nvim",
      "link": "https://github.com/gbprod/phpactor.nvim",
      "desc": "Lua version of the Phpactor vim plugin to take advantage of the latest Neovim features.",
      "isGH": true
    }
  ],
  "Comment": [
    {
      "gh": "numToStr/Comment.nvim",
      "link": "https://github.com/numToStr/Comment.nvim",
      "desc": "Smart and Powerful comment plugin for Neovim. Supports commentstring, motions, dot-repeat and more.",
      "isGH": true
    },
    {
      "gh": "b3nj5m1n/kommentary",
      "link": "https://github.com/b3nj5m1n/kommentary",
      "desc": "Commenting plugin written in Lua.",
      "isGH": true
    },
    {
      "gh": "glepnir/prodoc.nvim",
      "link": "https://github.com/glepnir/prodoc.nvim",
      "desc": "Comment and support generate annotation.",
      "isGH": true
    },
    {
      "gh": "gennaro-tedesco/nvim-commaround",
      "link": "https://github.com/gennaro-tedesco/nvim-commaround",
      "desc": "Fast and light commenting plugin written in Lua.",
      "isGH": true
    },
    {
      "gh": "folke/todo-comments.nvim",
      "link": "https://github.com/folke/todo-comments.nvim",
      "desc": "Highlight, list and search todo comments in your projects.",
      "isGH": true
    },
    {
      "gh": "terrortylor/nvim-comment",
      "link": "https://github.com/terrortylor/nvim-comment",
      "desc": "Toggle comments in Neovim using the built-in commentstring option.",
      "isGH": true
    },
    {
      "gh": "winston0410/commented.nvim",
      "link": "https://github.com/winston0410/commented.nvim",
      "desc": "A commenting plugin that supports counts and multiple comment patterns and much more.",
      "isGH": true
    },
    {
      "gh": "s1n7ax/nvim-comment-frame",
      "link": "https://github.com/s1n7ax/nvim-comment-frame",
      "desc": "Adds a comment frame based on the source file.",
      "isGH": true
    },
    {
      "gh": "danymat/neogen",
      "link": "https://github.com/danymat/neogen",
      "desc": "A better annotation generator. Supports multiple languages and annotation conventions.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.comment",
      "link": "https://github.com/echasnovski/mini.nvim#minicomment",
      "desc": "Module of `mini.nvim` for per-line commenting. Fully supports dot-repeat.",
      "isGH": true
    }
  ],
  "Collaborative Editing": [
    {
      "gh": "jbyuki/instant.nvim",
      "link": "https://github.com/jbyuki/instant.nvim",
      "desc": "A collaborative editing plugin for Neovim written in Lua with no dependencies.",
      "isGH": true
    }
  ],
  "Quickfix": [
    {
      "gh": "kevinhwang91/nvim-bqf",
      "link": "https://github.com/kevinhwang91/nvim-bqf",
      "desc": "The goal of nvim-bqf is to make Neovim's quickfix window better.",
      "isGH": true
    },
    {
      "gh": "gitlab.com/yorickpeterse/nvim-pqf",
      "link": "https://gitlab.com/yorickpeterse/nvim-pqf",
      "desc": "Prettier quickfix/location list windows for Neovim.",
      "isGH": false
    },
    {
      "gh": "stevearc/qf_helper.nvim",
      "link": "https://github.com/stevearc/qf_helper.nvim",
      "desc": "A collection of improvements for Neovim quickfix.",
      "isGH": true
    }
  ],
  "Motion": [
    {
      "gh": "tjdevries/train.nvim",
      "link": "https://github.com/tjdevries/train.nvim",
      "desc": "Train yourself with vim motions and make your own train tracks.",
      "isGH": true
    },
    {
      "gh": "phaazon/hop.nvim",
      "link": "https://github.com/phaazon/hop.nvim",
      "desc": "Hop is an EasyMotion-like plugin allowing you to jump anywhere in a document with as few keystrokes as possible.",
      "isGH": true
    },
    {
      "gh": "ggandor/lightspeed.nvim",
      "link": "https://github.com/ggandor/lightspeed.nvim",
      "desc": "A Sneak-like plugin offering unparalleled navigation speed via ahead-of-time displayed labels, that eliminate the pause between entering the search pattern and selecting the target.",
      "isGH": true
    },
    {
      "gh": "ggandor/leap.nvim",
      "link": "https://github.com/ggandor/leap.nvim",
      "desc": "A refined successor of Lightspeed, aiming to establish a widely accepted standard interface extension for moving around in Vim-like editors.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.jump",
      "link": "https://github.com/echasnovski/mini.nvim#minijump",
      "desc": "Module of `mini.nvim` for smarter jumping to a single character.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.jump2d",
      "link": "https://github.com/echasnovski/mini.nvim#minijump2d",
      "desc": "Module of `mini.nvim` for smarter jumping within visible lines via iterative label filtering. Supports custom jump targets (spots), labels, hooks, allowed windows and lines, and more.",
      "isGH": true
    },
    {
      "gh": "rlane/pounce.nvim",
      "link": "https://github.com/rlane/pounce.nvim",
      "desc": "An EasyMotion-like plugin for quick cursor movement using fuzzy search.",
      "isGH": true
    },
    {
      "gh": "edluffy/specs.nvim",
      "link": "https://github.com/edluffy/specs.nvim",
      "desc": "A fast and lightweight Neovim Lua plugin to keep an eye on where your cursor has jumped.",
      "isGH": true
    },
    {
      "gh": "abecodes/tabout.nvim",
      "link": "https://github.com/abecodes/tabout.nvim",
      "desc": "Jump out of brackets, quotes, objects, etc.",
      "isGH": true
    },
    {
      "gh": "mfussenegger/nvim-ts-hint-textobject",
      "link": "https://github.com/mfussenegger/nvim-ts-hint-textobject",
      "desc": "Region selection with hints on the AST nodes of a document powered by Treesitter.",
      "isGH": true
    },
    {
      "gh": "ziontee113/syntax-tree-surfer",
      "link": "https://github.com/ziontee113/syntax-tree-surfer",
      "desc": "Navigate and swap Treesitter's AST Nodes. Step into, step out, step over, step back.",
      "isGH": true
    },
    {
      "gh": "drybalka/tree-climber.nvim",
      "link": "https://github.com/drybalka/tree-climber.nvim",
      "desc": "Easy navigation around the Treesitter's tree that works in multi-language files and in normal mode.",
      "isGH": true
    }
  ],
  "Code Runner": [
    {
      "gh": "michaelb/sniprun",
      "link": "https://github.com/michaelb/sniprun",
      "desc": "Run parts of code of any language directly from Neovim.",
      "isGH": true
    },
    {
      "gh": "pianocomposer321/yabs.nvim",
      "link": "https://github.com/pianocomposer321/yabs.nvim",
      "desc": "Yet Another Build System for Neovim, written in Lua.",
      "isGH": true
    },
    {
      "gh": "CRAG666/code_runner.nvim",
      "link": "https://github.com/CRAG666/code_runner.nvim",
      "desc": "The best code runner you could have, with super powers.",
      "isGH": true
    },
    {
      "gh": "is0n/jaq-nvim",
      "link": "https://github.com/is0n/jaq-nvim",
      "desc": "Just Another Quickrun Plugin for Neovim in Lua.",
      "isGH": true
    },
    {
      "gh": "jedrzejboczar/toggletasks.nvim",
      "link": "https://github.com/jedrzejboczar/toggletasks.nvim",
      "desc": "Task runner with JSON/YAML configs, using toggleterm.nvim and telescope.nvim.",
      "isGH": true
    },
    {
      "gh": "EthanJWright/vs-tasks.nvim",
      "link": "https://github.com/EthanJWright/vs-tasks.nvim",
      "desc": "Telescope picker for VSCode style tasks.",
      "isGH": true
    }
  ],
  "GitHub": [
    {
      "gh": "pwntester/octo.nvim",
      "link": "https://github.com/pwntester/octo.nvim",
      "desc": "Work with GitHub issues and PRs from Neovim. Just edit the issue description.",
      "isGH": true
    },
    {
      "gh": "pwntester/codeql.nvim",
      "link": "https://github.com/pwntester/codeql.nvim",
      "desc": "Neovim plugin to help writing and testing CodeQL queries.",
      "isGH": true
    },
    {
      "gh": "ldelossa/gh.nvim",
      "link": "https://github.com/ldelossa/gh.nvim",
      "desc": "A fully featured GitHub integration for performing code reviews in Neovim.",
      "isGH": true
    }
  ],
  "Search": [
    {
      "gh": "kevinhwang91/nvim-hlslens",
      "link": "https://github.com/kevinhwang91/nvim-hlslens",
      "desc": "Helps you better glance searched information, seamlessly jump matched instances.",
      "isGH": true
    },
    {
      "gh": "rktjmp/highlight-current-n.nvim",
      "link": "https://github.com/rktjmp/highlight-current-n.nvim",
      "desc": "Highlights the current /, ? or \\* match under your cursor when pressing n or N and gets out of the way afterwards.",
      "isGH": true
    },
    {
      "gh": "gaborvecsei/memento.nvim",
      "link": "https://github.com/gaborvecsei/memento.nvim",
      "desc": "Keeps track of your visited file history after a buffer is closed. Reopen files more easily.",
      "isGH": true
    }
  ],
  "Scrollbar": [
    {
      "gh": "Xuyuanp/scrollbar.nvim",
      "link": "https://github.com/Xuyuanp/scrollbar.nvim",
      "desc": "Scrollbar for Neovim.",
      "isGH": true
    },
    {
      "gh": "dstein64/nvim-scrollview",
      "link": "https://github.com/dstein64/nvim-scrollview",
      "desc": "A Neovim plugin that displays interactive scrollbars.",
      "isGH": true
    },
    {
      "gh": "petertriho/nvim-scrollbar",
      "link": "https://github.com/petertriho/nvim-scrollbar",
      "desc": "Extensible scrollbar that shows diagnostics and search results.",
      "isGH": true
    }
  ],
  "Scrolling": [
    {
      "gh": "karb94/neoscroll.nvim",
      "link": "https://github.com/karb94/neoscroll.nvim",
      "desc": "Smooth scrolling for Neovim.",
      "isGH": true
    },
    {
      "gh": "declancm/cinnamon.nvim",
      "link": "https://github.com/declancm/cinnamon.nvim",
      "desc": "Smooth scrolling for any movement command in Neovim.",
      "isGH": true
    }
  ],
  "Mouse": [
    {
      "gh": "notomo/gesture.nvim",
      "link": "https://github.com/notomo/gesture.nvim",
      "desc": "Mouse gesture plugin for Neovim.",
      "isGH": true
    }
  ],
  "Project": [
    {
      "gh": "shaeinst/penvim",
      "link": "https://github.com/shaeinst/penvim",
      "desc": "Project's Root Directory and Documents Indentation detector with project based config loader.",
      "isGH": true
    },
    {
      "gh": "nyngwang/NeoRoot.lua",
      "link": "https://github.com/nyngwang/NeoRoot.lua",
      "desc": "Change your current working directory to the buffer your cursor is on, and try to go up 2 levels but stop after it encounters one of the project roots you define.",
      "isGH": true
    },
    {
      "gh": "windwp/nvim-projectconfig",
      "link": "https://github.com/windwp/nvim-projectconfig",
      "desc": "Load Neovim config depend on project directory.",
      "isGH": true
    },
    {
      "gh": "windwp/nvim-spectre",
      "link": "https://github.com/windwp/nvim-spectre",
      "desc": "Search and replace panel for Neovim.",
      "isGH": true
    },
    {
      "gh": "ahmedkhalf/project.nvim",
      "link": "https://github.com/ahmedkhalf/project.nvim",
      "desc": "An all in one Neovim plugin that provides superior project management.",
      "isGH": true
    },
    {
      "gh": "klen/nvim-config-local",
      "link": "https://github.com/klen/nvim-config-local",
      "desc": "Secure load local config files from working directories.",
      "isGH": true
    },
    {
      "gh": "cljoly/telescope-repo.nvim",
      "link": "https://cj.rs/telescope-repo-nvim/",
      "desc": "Telescope picker to jump to any repository (git or other) on the file system.",
      "isGH": false
    }
  ],
  "Browser integration": [
    {
      "gh": "glacambre/firenvim",
      "link": "https://github.com/glacambre/firenvim",
      "desc": "Embed Neovim right into your browser, no questions asked.",
      "isGH": true
    }
  ],
  "Editing support": [
    {
      "gh": "windwp/nvim-ts-autotag",
      "link": "https://github.com/windwp/nvim-ts-autotag",
      "desc": "Use treesitter to autoclose and autorename xml,html,jsx tag.",
      "isGH": true
    },
    {
      "gh": "windwp/nvim-autopairs",
      "link": "https://github.com/windwp/nvim-autopairs",
      "desc": "A minimalist autopairs for Neovim written by Lua.",
      "isGH": true
    },
    {
      "gh": "ZhiyuanLck/smart-pairs",
      "link": "https://github.com/ZhiyuanLck/smart-pairs",
      "desc": "Ultimate smart pairs for Neovim written by Lua.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.pairs",
      "link": "https://github.com/echasnovski/mini.nvim#minipairs",
      "desc": "Module of `mini.nvim` for autopairs which has minimal defaults and functionality to do per-key mapping.",
      "isGH": true
    },
    {
      "gh": "autoclose.nvim",
      "link": "https://github.com/max-0406/autoclose.nvim",
      "desc": "A minimalist autoclose plugin for Neovim written by lua.",
      "isGH": true
    },
    {
      "gh": "monaqa/dial.nvim",
      "link": "https://github.com/monaqa/dial.nvim",
      "desc": "Extended increment/decrement.",
      "isGH": true
    },
    {
      "gh": "p00f/nvim-ts-rainbow",
      "link": "https://github.com/p00f/nvim-ts-rainbow",
      "desc": "Rainbow :rainbow: parentheses for Neovim using tree-sitter :rainbow:.",
      "isGH": true
    },
    {
      "gh": "AckslD/nvim-revJ.lua",
      "link": "https://github.com/AckslD/nvim-revJ.lua",
      "desc": "Neovim Lua plugin for doing the opposite of join-line (J) for arguments.",
      "isGH": true
    },
    {
      "gh": "JoosepAlviste/nvim-ts-context-commentstring",
      "link": "https://github.com/JoosepAlviste/nvim-ts-context-commentstring",
      "desc": "A Neovim plugin for setting the `commentstring` option based on the cursor location in the file. The location is checked via treesitter queries.",
      "isGH": true
    },
    {
      "gh": "Pocco81/TrueZen.nvim",
      "link": "https://github.com/Pocco81/TrueZen.nvim",
      "desc": "Clean and elegant distraction-free writing for NeoVim.",
      "isGH": true
    },
    {
      "gh": "Pocco81/HighStr.nvim",
      "link": "https://github.com/Pocco81/HighStr.nvim",
      "desc": "A NeoVim plugin for highlighting visual selections like in a normal document editor!",
      "isGH": true
    },
    {
      "gh": "Pocco81/AutoSave.nvim",
      "link": "https://github.com/Pocco81/AutoSave.nvim",
      "desc": "A NeoVim plugin for saving your work before the world collapses or you type :qa!",
      "isGH": true
    },
    {
      "gh": "folke/zen-mode.nvim",
      "link": "https://github.com/folke/zen-mode.nvim",
      "desc": "Distraction-free coding for Neovim.",
      "isGH": true
    },
    {
      "gh": "haringsrob/nvim_context_vt",
      "link": "https://github.com/haringsrob/nvim_context_vt",
      "desc": "Shows virtual text of the current context.",
      "isGH": true
    },
    {
      "gh": "nvim-treesitter/nvim-treesitter-context",
      "link": "https://github.com/nvim-treesitter/nvim-treesitter-context",
      "desc": "Shows floating hover with the current function/block context.",
      "isGH": true
    },
    {
      "gh": "mizlan/iswap.nvim",
      "link": "https://github.com/mizlan/iswap.nvim",
      "desc": "Interactively select and swap function arguments, list elements, and more. Powered by tree-sitter.",
      "isGH": true
    },
    {
      "gh": "nacro90/numb.nvim",
      "link": "https://github.com/nacro90/numb.nvim",
      "desc": "Peek lines in a non-obtrusive way.",
      "isGH": true
    },
    {
      "gh": "ethanholz/nvim-lastplace",
      "link": "https://github.com/ethanholz/nvim-lastplace",
      "desc": "Reopen files at your last edit position.",
      "isGH": true
    },
    {
      "gh": "Allendang/nvim-expand-expr",
      "link": "https://github.com/AllenDang/nvim-expand-expr",
      "desc": "Expand and repeat expression to multiple lines.",
      "isGH": true
    },
    {
      "gh": "h-hg/fcitx.nvim",
      "link": "https://github.com/h-hg/fcitx.nvim",
      "desc": "Switching and restoring fcitx state for each buffer separately.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.trailspace",
      "link": "https://github.com/echasnovski/mini.nvim#minitrailspace",
      "desc": "Module of `mini.nvim` for automatic highlighting of trailing whitespace with functionality to remove it.",
      "isGH": true
    },
    {
      "gh": "filipdutescu/renamer.nvim",
      "link": "https://github.com/filipdutescu/renamer.nvim",
      "desc": "VS Code-like renaming UI for Neovim, written in Lua.",
      "isGH": true
    },
    {
      "gh": "gbprod/cutlass.nvim",
      "link": "https://github.com/gbprod/cutlass.nvim",
      "desc": "Plugin that adds a 'cut' operation separate from 'delete'.",
      "isGH": true
    },
    {
      "gh": "gbprod/substitute.nvim",
      "link": "https://github.com/gbprod/substitute.nvim",
      "desc": "Neovim plugin introducing a new operator motions to quickly replace and exchange text.",
      "isGH": true
    },
    {
      "gh": "gbprod/yanky.nvim",
      "link": "https://github.com/gbprod/yanky.nvim",
      "desc": "Improved Yank and Put functionalities for Neovim.",
      "isGH": true
    },
    {
      "gh": "sQVe/sort.nvim",
      "link": "https://github.com/sQVe/sort.nvim",
      "desc": "Sorting plugin that intelligently supports line-wise and delimiter sorting.",
      "isGH": true
    },
    {
      "gh": "booperlv/nvim-gomove",
      "link": "https://github.com/booperlv/nvim-gomove",
      "desc": "A complete plugin for moving and duplicating blocks and lines, with complete fold handling, reindenting, and undoing in one go.",
      "isGH": true
    },
    {
      "gh": "anuvyklack/pretty-fold.nvim",
      "link": "https://github.com/anuvyklack/pretty-fold.nvim",
      "desc": "Foldtext customization.",
      "isGH": true
    },
    {
      "gh": "bennypowers/nvim-regexplainer",
      "link": "https://github.com/bennypowers/nvim-regexplainer",
      "desc": "Explain the regular expression under the cursor.",
      "isGH": true
    },
    {
      "gh": "linty-org/readline.nvim",
      "link": "https://github.com/linty-org/readline.nvim",
      "desc": "Readline keyboard shortcuts for Neovim.",
      "isGH": true
    },
    {
      "gh": "gbprod/stay-in-place.nvim",
      "link": "https://github.com/gbprod/stay-in-place.nvim",
      "desc": " Neovim plugin that prevent cursor from moving when using shift and filter actions.",
      "isGH": true
    }
  ],
  "Formatting": [
    {
      "gh": "gpanders/editorconfig.nvim",
      "link": "https://github.com/gpanders/editorconfig.nvim",
      "desc": "An EditorConfig plugin for Neovim written in Fennel.",
      "isGH": true
    },
    {
      "gh": "mhartington/formatter.nvim",
      "link": "https://github.com/mhartington/formatter.nvim",
      "desc": "A format runner for Neovim written in Lua.",
      "isGH": true
    },
    {
      "gh": "lukas-reineke/lsp-format.nvim",
      "link": "https://github.com/lukas-reineke/lsp-format.nvim",
      "desc": "A wrapper around Neovims native LSP formatting.",
      "isGH": true
    },
    {
      "gh": "sbdchd/neoformat",
      "link": "https://github.com/sbdchd/neoformat",
      "desc": "A (Neo)vim plugin for formatting code.",
      "isGH": true
    },
    {
      "gh": "cappyzawa/trim.nvim",
      "link": "https://github.com/cappyzawa/trim.nvim",
      "desc": "This plugin trims trailing whitespace and lines.",
      "isGH": true
    },
    {
      "gh": "mcauley-penney/tidy.nvim",
      "link": "https://github.com/mcauley-penney/tidy.nvim",
      "desc": "Clear trailing whitespace and empty lines at end of file on every save.",
      "isGH": true
    }
  ],
  "Web development": [
    {
      "gh": "NTBBloodbath/rest.nvim",
      "link": "https://github.com/NTBBloodbath/rest.nvim",
      "desc": "A fast Neovim http client written in Lua.",
      "isGH": true
    }
  ],
  "Media": [
    {
      "gh": "ekickx/clipboard-image.nvim",
      "link": "https://github.com/ekickx/clipboard-image.nvim",
      "desc": "Neovim Lua plugin to paste image from clipboard.",
      "isGH": true
    },
    {
      "gh": "askfiy/nvim-picgo",
      "link": "https://github.com/askfiy/nvim-picgo",
      "desc": "A picgo-core-based Neovim plugin, written in Lua, that allows you to upload images to the image bed, which means you can view your images from anywhere on the internet.",
      "isGH": true
    },
    {
      "gh": "gwatcha/reaper-keys",
      "link": "https://github.com/gwatcha/reaper-keys",
      "desc": "Modal keybindings for Reaper DAW.",
      "isGH": true
    },
    {
      "gh": "madskjeldgaard/reaper-nvim",
      "link": "https://github.com/madskjeldgaard/reaper-nvim",
      "desc": "Remote control Reaper DAW from Neovim.",
      "isGH": true
    },
    {
      "gh": "davidgranstrom/scnvim",
      "link": "https://github.com/davidgranstrom/scnvim",
      "desc": "Neovim frontend for SuperCollider.",
      "isGH": true
    }
  ],
  "Discord Rich Presence": [
    {
      "gh": "andweeb/presence.nvim",
      "link": "https://github.com/andweeb/presence.nvim",
      "desc": "Fast and lite Discord Rich Presence plugin for Neovim written in Lua.",
      "isGH": true
    }
  ],
  "Command Line": [
    {
      "gh": "notomo/cmdbuf.nvim",
      "link": "https://github.com/notomo/cmdbuf.nvim",
      "desc": "Alternative command-line-window plugin.",
      "isGH": true
    },
    {
      "gh": "gelguy/wilder.nvim",
      "link": "https://github.com/gelguy/wilder.nvim",
      "desc": "A plugin for fuzzy command line autocompletion.",
      "isGH": true
    }
  ],
  "Session": [
    {
      "gh": "rmagatti/auto-session",
      "link": "https://github.com/rmagatti/auto-session",
      "desc": "A small automated session manager for Neovim.",
      "isGH": true
    },
    {
      "gh": "echasnovski/mini.nvim#mini.sessions",
      "link": "https://github.com/echasnovski/mini.nvim#minisessions",
      "desc": "Module of `mini.nvim` for session management (read, write, delete).",
      "isGH": true
    },
    {
      "gh": "olimorris/persisted.nvim",
      "link": "https://github.com/olimorris/persisted.nvim",
      "desc": "Simple session management with git branching, autosave/autoload and Telescope support.",
      "isGH": true
    },
    {
      "gh": "Shatur/neovim-session-manager",
      "link": "https://github.com/Shatur/neovim-session-manager",
      "desc": "A simple wrapper around :mksession.",
      "isGH": true
    },
    {
      "gh": "jedrzejboczar/possession.nvim",
      "link": "https://github.com/jedrzejboczar/possession.nvim",
      "desc": "Flexible session management with arbitrary persistent data stored as JSON.",
      "isGH": true
    }
  ],
  "Test": [
    {
      "gh": "rcarriga/vim-ultest",
      "link": "https://github.com/rcarriga/vim-ultest",
      "desc": "The ultimate testing plugin for Neovim.",
      "isGH": true
    },
    {
      "gh": "David-Kunz/jester",
      "link": "https://github.com/David-Kunz/jester",
      "desc": "A Neovim plugin to easily run and debug Jest tests.",
      "isGH": true
    },
    {
      "gh": "klen/nvim-test",
      "link": "https://github.com/klen/nvim-test",
      "desc": "A Neovim wrapper for running tests.",
      "isGH": true
    },
    {
      "gh": "nvim-neotest/neotest",
      "link": "https://github.com/nvim-neotest/neotest",
      "desc": "An extensible framework for interacting with tests within Neovim.",
      "isGH": true
    }
  ],
  "Competitive Programming": [
    {
      "gh": "p00f/cphelper.nvim",
      "link": "https://github.com/p00f/cphelper.nvim",
      "desc": "Neovim helper for competitive programming written in Lua.",
      "isGH": true
    },
    {
      "gh": "xeluxee/competitest.nvim",
      "link": "https://github.com/xeluxee/competitest.nvim",
      "desc": "A plugin to automate testcases management and checking for Competitive Programming contests.",
      "isGH": true
    }
  ],
  "Preconfigured Configuration": [
    {
      "gh": "Abstract-IDE/Abstract",
      "link": "https://github.com/Abstract-IDE/Abstract",
      "desc": "Abstract, The NeoVim configuration to achieve the power of Modern IDE.",
      "isGH": true
    },
    {
      "gh": "SpaceVim/SpaceVim",
      "link": "https://spacevim.org",
      "desc": "A community-driven modular vim/neovim distribution, like spacemacs but for vim/neovim.",
      "isGH": false
    },
    {
      "gh": "CosmicNvim/CosmicNvim",
      "link": "https://github.com/CosmicNvim/CosmicNvim",
      "desc": "CosmicNvim is a lightweight and opinionated Neovim config for web development, specifically designed to provide a 💫 COSMIC programming experience!",
      "isGH": true
    },
    {
      "gh": "artart222/CodeArt",
      "link": "https://github.com/artart222/CodeArt",
      "desc": "A fast general-purpose IDE written entirely in Lua with an installer for Linux/Windows/macOS and built in `:CodeArtUpdate` command for updating it.",
      "isGH": true
    },
    {
      "gh": "NTBBloodbath/doom-nvim",
      "link": "https://github.com/NTBBloodbath/doom-nvim",
      "desc": "Port of the doom-emacs framework, its goal is to add useful functions to Neovim to start working in a stable and efficient development environment without spending a lot of time configuring everything.",
      "isGH": true
    },
    {
      "gh": "crivotz/nv-ide",
      "link": "https://github.com/crivotz/nv-ide",
      "desc": "Neovim custom configuration, oriented for full stack developers (rails, ruby, php, html, css, SCSS, JavaScript).",
      "isGH": true
    },
    {
      "gh": "LunarVim/LunarVim",
      "link": "https://github.com/LunarVim/LunarVim",
      "desc": "This project aims to help one transition away from VSCode, and into a superior text editing experience.",
      "isGH": true
    },
    {
      "gh": "hackorum/VapourNvim",
      "link": "https://github.com/hackorum/VapourNvim",
      "desc": "A NeoVim config for THE ULTIMATE vim IDE-like experience.",
      "isGH": true
    },
    {
      "gh": "vi-tality/neovitality",
      "link": "https://github.com/vi-tality/neovitality",
      "desc": "A full-featured NeoVim distribution, packaged with Nix Flake for easy installation and reproducibility.",
      "isGH": true
    },
    {
      "gh": "siduck76/NvChad",
      "link": "https://github.com/siduck76/NvChad",
      "desc": "An attempt to make Neovim cli as functional as an IDE while being very beautiful and less bloated.",
      "isGH": true
    },
    {
      "gh": "nvoid-lua/nvoid",
      "link": "https://github.com/nvoid-lua/nvoid",
      "desc": "Simple Neovim config written in Lua with all the modern features available in any **IDE**",
      "isGH": true
    },
    {
      "gh": "cstsunfu/.sea.nvim",
      "link": "https://github.com/cstsunfu/.sea.nvim",
      "desc": "A modular NeoVim configuration with beautiful UI and some useful features(Pomodoro Clock, Window Number).",
      "isGH": true
    },
    {
      "gh": "shaeinst/roshnivim",
      "link": "https://github.com/shaeinst/roshnivim",
      "desc": "Roshnivim, can be called neovim's distro, is a predefined configs so that you don't need 1000hr to setup neovim as an IDE.",
      "isGH": true
    },
    {
      "gh": "AstroNvim/AstroNvim",
      "link": "https://github.com/AstroNvim/AstroNvim",
      "desc": "AstroNvim is an aesthetic and feature-rich Neovim config that is extensible and easy to use with a great set of plugins.",
      "isGH": true
    },
    {
      "gh": "shaunsingh/nyoom.nvim",
      "link": "https://github.com/shaunsingh/nyoom.nvim",
      "desc": "Blazing fast, configurable, minimal and lispy neovim config written in Fennel. Base config for users to extend and add upon, leading to a more unique editing experience.",
      "isGH": true
    },
    {
      "gh": "CanKolay3499/CNvim",
      "link": "https://github.com/CanKolay3499/CNvim",
      "desc": "A lightweight Neovim config for web development.",
      "isGH": true
    },
    {
      "gh": "jrychn/moduleVim",
      "link": "https://github.com/jrychn/ModuleVim",
      "desc": "A very easy to use",
      "isGH": true
    },
    {
      "gh": "askfiy/nvim",
      "link": "https://github.com/askfiy/nvim",
      "desc": "An excellent Neovim configuration, which is as powerful as Vscode, is lightning fast ⚡️.",
      "isGH": true
    },
    {
      "gh": "imbacraft/dusk.nvim",
      "link": "https://github.com/imbacraft/dusk.nvim",
      "desc": "Dusk is a lightweight, aesthetically minimal Neovim config, written in Lua, able to provide for web and Java development.",
      "isGH": true
    }
  ],
  "Keybinding": [
    {
      "gh": "folke/which-key.nvim",
      "link": "https://github.com/folke/which-key.nvim",
      "desc": "Neovim plugin that shows a popup with possible keybindings of the command you started typing.",
      "isGH": true
    },
    {
      "gh": "mrjones2014/legendary.nvim",
      "link": "https://github.com/mrjones2014/legendary.nvim",
      "desc": "Define your keymaps, commands, and autocommands as simple Lua tables, and create a legend for them at the same time, integrates with `which-key.nvim`.",
      "isGH": true
    },
    {
      "gh": "Iron-E/nvim-cartographer",
      "link": "https://github.com/Iron-E/nvim-cartographer",
      "desc": "a more convenient `:map`ping syntax for Lua environments.",
      "isGH": true
    },
    {
      "gh": "b0o/mapx.nvim",
      "link": "https://github.com/b0o/mapx.nvim",
      "desc": "A simpler key mapping API that mimics Neovim's `:map`-family of commands. Integrates with which-key.nvim.",
      "isGH": true
    },
    {
      "gh": "LionC/nest.nvim",
      "link": "https://github.com/LionC/nest.nvim",
      "desc": "Lua utility to map keys concisely using cascading trees. Also allows binding Lua functions to keys.",
      "isGH": true
    },
    {
      "gh": "LinArcX/telescope-command-palette.nvim",
      "link": "https://github.com/LinArcX/telescope-command-palette.nvim",
      "desc": "Lua plugin to create key-bindings and watch them with telescope.",
      "isGH": true
    },
    {
      "gh": "slugbyte/unruly-worker",
      "link": "https://github.com/slugbyte/unruly-worker",
      "desc": "A ridiculously fun alternative keymap for the workman keyboard layout with nvim features like LSP support, built and configured with lua.",
      "isGH": true
    },
    {
      "gh": "FeiyouG/command_center.nvim",
      "link": "https://github.com/FeiyouG/command_center.nvim",
      "desc": "Create and manage keybindings and commands in a more organized manner and search them quickly through Telescope.",
      "isGH": true
    },
    {
      "gh": "linty-org/key-menu.nvim",
      "link": "https://github.com/linty-org/key-menu.nvim",
      "desc": "Key mapping hints in a floating window.",
      "isGH": true
    },
    {
      "gh": "anuvyklack/hydra.nvim",
      "link": "https://github.com/anuvyklack/hydra.nvim",
      "desc": "Create custom submodes and menus. Port of Emacs Hydra.",
      "isGH": true
    },
    {
      "gh": "anuvyklack/keymap-amend.nvim",
      "link": "https://github.com/anuvyklack/keymap-amend.nvim",
      "desc": "Amend the existing keymap.",
      "isGH": true
    }
  ],
  "Tmux": [
    {
      "gh": "aserowy/tmux.nvim",
      "link": "https://github.com/aserowy/tmux.nvim",
      "desc": "Tmux integration for Neovim features pane movement and resizing from within Neovim.",
      "isGH": true
    },
    {
      "gh": "danielpieper/telescope-tmuxinator.nvim",
      "link": "https://github.com/danielpieper/telescope-tmuxinator.nvim",
      "desc": "Integration for tmuxinator with telescope.nvim.",
      "isGH": true
    },
    {
      "gh": "hkupty/nvimux",
      "link": "https://github.com/hkupty/nvimux",
      "desc": "Neovim as tmux replacement.",
      "isGH": true
    },
    {
      "gh": "numToStr/Navigator.nvim",
      "link": "https://github.com/numToStr/Navigator.nvim",
      "desc": "Smoothly navigate between Neovim splits and Tmux panes.",
      "isGH": true
    },
    {
      "gh": "declancm/windex.nvim",
      "link": "https://github.com/declancm/windex.nvim",
      "desc": "Collection of window functions which includes moving between, closing and maximizing Neovim splits and Tmux panes.",
      "isGH": true
    }
  ],
  "Remote Development": [
    {
      "gh": "chipsenkbeil/distant.nvim",
      "link": "https://github.com/chipsenkbeil/distant.nvim",
      "desc": "Edit files, run programs, and work with LSP on a remote machine from the comfort of your local environment.",
      "isGH": true
    },
    {
      "gh": "jamestthompson3/nvim-remote-containers",
      "link": "https://github.com/jamestthompson3/nvim-remote-containers",
      "desc": "Develop inside docker containers, just like VSCode.",
      "isGH": true
    },
    {
      "gh": "esensar/nvim-dev-container",
      "link": "https://github.com/esensar/nvim-dev-container",
      "desc": "Neovim devcontainer.json and general development container support.",
      "isGH": true
    }
  ],
  "Split and Window": [
    {
      "gh": "henriquehbr/ataraxis.lua",
      "link": "https://github.com/henriquehbr/ataraxis.lua",
      "desc": "A zen mode for improving code readability on Neovim.",
      "isGH": true
    },
    {
      "gh": "gitlab.com/yorickpeterse/nvim-window",
      "link": "https://gitlab.com/yorickpeterse/nvim-window",
      "desc": "Easily jump between Neovim windows.",
      "isGH": false
    },
    {
      "gh": "sindrets/winshift.nvim",
      "link": "https://github.com/sindrets/winshift.nvim",
      "desc": "Rearrange your windows with ease.",
      "isGH": true
    },
    {
      "gh": "beauwilliams/focus.nvim",
      "link": "https://github.com/beauwilliams/focus.nvim",
      "desc": "Auto-Focusing and Auto-Resizing Splits/Windows for Neovim written in Lua! Vim splits on steroids.",
      "isGH": true
    },
    {
      "gh": "luukvbaal/stabilize.nvim",
      "link": "https://github.com/luukvbaal/stabilize.nvim",
      "desc": "Stabilized window content on window open/close events.",
      "isGH": true
    }
  ],
  "Version Manager": [
    {
      "gh": "MordechaiHadad/bob",
      "link": "https://github.com/MordechaiHadad/bob",
      "desc": "A cross platform and easy to use Neovim version manager.",
      "isGH": true
    },
    {
      "gh": "NTBBloodbath/nvenv",
      "link": "https://github.com/NTBBloodbath/nvenv",
      "desc": "A lightweight and blazing fast Neovim version manager.",
      "isGH": true
    },
    {
      "gh": "shohi/neva",
      "link": "https://github.com/shohi/neva",
      "desc": "A Neovim version manager written in Lua.",
      "isGH": true
    }
  ],
  "Boilerplate": [
    {
      "gh": "gennaro-tedesco/boilit",
      "link": "https://github.com/gennaro-tedesco/boilit",
      "desc": "Create boilerplate structure for Neovim plugins.",
      "isGH": true
    },
    {
      "gh": "Vimawesome",
      "link": "https://vimawesome.com/",
      "desc": "Showcases various plugins for vim and has a [neovim tag](https://vimawesome.com/?q=tag:neovim) for other plugins targeting Neovim.",
      "isGH": false
    },
    {
      "gh": "awesome-vim",
      "link": "https://github.com/akrawchyk/awesome-vim#tools",
      "desc": "Short list of vim plugins and helpful guides.",
      "isGH": true
    },
    {
      "gh": "vim-plugin-list",
      "link": "https://github.com/altermo/vim-plugin-list",
      "desc": "List of vim and Neovim plugins.",
      "isGH": true
    },
    {
      "gh": "Neovimcraft",
      "link": "https://neovimcraft.com",
      "desc": "A site dedicated to searching for Neovim specific plugins and guides for building plugins in Lua.",
      "isGH": false
    }
  ]
}
